{
  "abi": [
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "initiailize",
      "inputs": [
        {
          "name": "_splitAddrs",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "_splitRatios",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "splitAddrs",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "splitRatios",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeTo",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "AdminChanged",
      "inputs": [
        {
          "name": "previousAdmin",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "newAdmin",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BeaconUpgraded",
      "inputs": [
        {
          "name": "beacon",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x60a0806040523461003157306080526110df9081610037823960805181818161069f015281816107c70152610a4d0152f35b600080fdfe6040608081526004803610156100e1575b361561001b57600080fd5b34159160005b60c9548110156100df5761003481610cac565b9054600391821b1c9081340291348304148617156100ca576000806127108194829461005f88610c5f565b9054939092049291901b1c6001600160a01b03165af161007d610f49565b50156100915761008c9061104d565b610021565b815162461bcd60e51b815260208185015260136024820152721cd95b99081b9bdd081cdd58d8d95cdcd99d5b606a1b6044820152606490fd5b601185634e487b7160e01b6000525260246000fd5b005b6000803560e01c80631f9f20c914610c1d5780633659cfe614610a265780634f1ef2861461074c57806352d1902d1461068b5780636d819363146102e7578063715018a61461028a5780637ab0d1e81461024d5780638da5cb5b146102205763f2fde38b146101505750610010565b91903461021c57602036600319011261021c5761016b610ce3565b90610174610d9f565b6001600160a01b039182169283156101ca575050609754826bffffffffffffffffffffffff60a01b821617609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50823461024957816003193601126102495760975490516001600160a01b039091168152602090f35b5080fd5b5091903461021c57602036600319011261021c57359160ca548310156102875750610279602092610cac565b91905490519160031b1c8152f35b80fd5b50346102875780600319360112610287576102a3610d9f565b609780546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50913461021c578060031936011261021c5767ffffffffffffffff918035838111610687576103199036908301610d6e565b919060248035868111610683576103339036908501610d6e565b93909288549760ff8960081c161596878098610676575b801561065f575b1561060657600199888b60ff198316178d556105f5575b508681036105c1578a805b88821061058f57612710915003610559578181116105475768010000000000000000928382116105355760c9548260c9558083106104ff575b508b905b8282106104b75750505085116104a557841161049457505060ca548260ca5580831061045e575b5060ca865284865b83811061042b57505050506103f2578280f35b825461ff0019168355519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b60208335930192817f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee101550185906103df565b61048e90837f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee19182019101611072565b386103d7565b634e487b7160e01b88526041905286fd5b50634e487b7160e01b88526041905286fd5b8035916001600160a01b03831683036104fb5760208d920192817f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d28015501906103b0565b8d80fd5b61052f90837f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d289182019101611072565b386103ac565b634e487b7160e01b8c5260418552858cfd5b634e487b7160e01b8b5260418452848bfd5b885162461bcd60e51b8152602081860152601181870152706e6f7420656e6f75676820726174696f7360781b6044820152606490fd5b8160051b88013581018091116105af576105a9909161104d565b90610373565b634e487b7160e01b8d5260118652868dfd5b885162461bcd60e51b8152602081860152600f818701526e0dcdee840e6c2daca40d8cadccee8d608b1b6044820152606490fd5b61ffff1916610101178b5538610368565b885162461bcd60e51b8152602081860152602e818701527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156103515750600160ff8b1614610351565b50600160ff8b161061034a565b8780fd5b8480fd5b5034610287578060031936011261028757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036106e4576020825160008051602061108a8339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b50918060031936011261021c57610761610ce3565b906024359067ffffffffffffffff82116106875736602383011215610687578184013561078d81610d52565b9061079a83519283610d30565b8082528660209485840192366024828401011161021c578060248893018537840101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906107f530831415610df7565b61081260008051602061108a833981519152928284541614610e58565b61081a610d9f565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610857575050505050506108549150610eb9565b80f35b8693949596169085516352d1902d60e01b815287818a81865afa8a91816109f3575b506108d857865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939594970361099e5750908692916108f285610eb9565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a2855115801590610996575b61092f575b50505050505080f35b61098a95660819985a5b195960ca1b837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c8695519861096d8a610cfe565b60278a528901528701525190845af4610984610f49565b91610f79565b50388080838180610926565b506001610921565b835162461bcd60e51b8152908101869052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d8311610a1f575b610a0b8183610d30565b81010312610a1b57519038610879565b8a80fd5b503d610a01565b50913461021c57602080600319360112610c1957610a42610ce3565b916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690610a7b30831415610df7565b610a9860008051602061108a833981519152928284541614610e58565b610aa0610d9f565b8251918483019183831067ffffffffffffffff841117610c06578285528884527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610afa575050505050506108549150610eb9565b8693949596169085516352d1902d60e01b815287818a81865afa8a9181610bd7575b50610b7b57865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939594970361099e575090869291610b9585610eb9565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a2855115801590610bd05761092f5750505050505080f35b5082610921565b9091508881813d8311610bff575b610bef8183610d30565b81010312610a1b57519038610b1c565b503d610be5565b634e487b7160e01b895260418852602489fd5b8380fd5b5091903461021c57602036600319011261021c57359160c9548310156102875750610c49602092610c5f565b905491519160018060a01b039160031b1c168152f35b60c954811015610c965760c96000527f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d280190600090565b634e487b7160e01b600052603260045260246000fd5b60ca54811015610c965760ca6000527f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee10190600090565b600435906001600160a01b0382168203610cf957565b600080fd5b6060810190811067ffffffffffffffff821117610d1a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d1a57604052565b67ffffffffffffffff8111610d1a57601f01601f191660200190565b9181601f84011215610cf95782359167ffffffffffffffff8311610cf9576020808501948460051b010111610cf957565b6097546001600160a01b03163303610db357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610dfe57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15610e5f57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15610eee5760008051602061108a83398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b3d15610f74573d90610f5a82610d52565b91610f686040519384610d30565b82523d6000602084013e565b606090565b91929015610fdb5750815115610f8d575090565b3b15610f965790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015610fee5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611034575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611011565b600019811461105c5760010190565b634e487b7160e01b600052601160045260246000fd5b81811061107d575050565b6000815560010161107256fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220eccfe0d78c3eb2a00476deb081ac67a9724061373d2b22bac886105d9dfc1f6764736f6c63430008120033",
    "sourceMap": "210:1058:218:-:0;;;;;;;1332:4:46;1324:13;;210:1058:218;;;;;;1324:13:46;210:1058:218;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "210:1058:218:-:0;;;;;;;;;;;-1:-1:-1;210:1058:218;;;;;;;;998:9;210:1058;;1034:1;1060:3;1041:10;210:1058;1037:21;;;;;1103:14;;;:::i;:::-;210:1058;;;;;;;998:9;;;210:1058;998:9;;210:1058;;;;;;;;1034:1;1159:13;1121:5;1159:13;;;;;;;:::i;:::-;210:1058;;;;;;;;;;;-1:-1:-1;;;;;210:1058:218;1159:37;;;;:::i;:::-;;210:1058;;;1060:3;;;:::i;:::-;1022:13;;210:1058;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;1034:1;210:1058;;;1034:1;210:1058;1037:21;210:1058;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;210:1058:218;;;;;;:::i;:::-;1303:62:39;;;:::i;:::-;-1:-1:-1;;;;;210:1058:218;;;;2402:22:39;;210:1058:218;;;;2758:6:39;210:1058:218;;;;;;;;2758:6:39;210:1058:218;;2806:40:39;;;;210:1058:218;;;;;;;;971:66:43;;;;210:1058:218;;;;;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;;;;;;;;;;;1513:6:39;210:1058:218;;;-1:-1:-1;;;;;210:1058:218;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;210:1058:218;;;;;;319:28;210:1058;319:28;;;;;;;210:1058;319:28;;:::i;:::-;210:1058;;;;;;;;;;;;319:28;;;210:1058;;;;;;;;;;;;;1303:62:39;;:::i;:::-;2758:6;210:1058:218;;-1:-1:-1;;;;;;210:1058:218;;;;;;;-1:-1:-1;;;;;210:1058:218;2806:40:39;210:1058:218;;2806:40:39;210:1058:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;971:66:43;210:1058:218;;;971:66:43;3301:14:45;3347:34;;;;;;210:1058:218;3346:108:45;;;;210:1058:218;;;;3551:1:45;210:1058:218;;;;;;;;;;3562:65:45;;210:1058:218;539:41;;;;210:1058;;610:17;;658:23;;;;;;764:5;755:14;;;210:1058;;;;;;;;;;;;;;802:24;210:1058;;802:24;210:1058;;;;;;638:99;210:1058;;;;;;;;;;;;;;;;;;;;;;836:26;210:1058;;836:26;210:1058;;;;;;;;836:26;210:1058;;;;;;;;;;3647:99:45;;;;;;210:1058:218;;;3647:99:45;210:1058:218;;-1:-1:-1;;210:1058:218;;;;;;;3721:14:45;;210:1058:218;;3721:14:45;3647:99;;210:1058:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;-1:-1:-1;;;;210:1058:218;;;;;;;;;;;-1:-1:-1;;;;;210:1058:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;683:3;210:1058;;;;;;;;;;;;;683:3;702:24;683:3;;:::i;:::-;643:13;;;210:1058;-1:-1:-1;;;210:1058:218;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;3562:65:45;-1:-1:-1;;210:1058:218;;;;;3562:65:45;;;210:1058:218;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;3346:108:45;3426:4;;1713:19:63;:23;3387:66:45;;3346:108;3387:66;971::43;3452:1:45;971:66:43;;;3436:17:45;3346:108;;3347:34;971:66:43;3380:1:45;971:66:43;;;3365:16:45;3347:34;;210:1058:218;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2333:6:46;-1:-1:-1;;;;;210:1058:218;2324:4:46;2316:23;210:1058:218;;;;;-1:-1:-1;;;;;;;;;;;210:1058:218;;;;;;;;971:66:43;;;;210:1058:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1898:6:46;210:1058:218;;;1873:80:46;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;210:1058:218;;;;;1971:30:46;1963:87;:::i;:::-;1303:62:39;;:::i;:::-;971:66:43;;;;;;;3330:17;;;;;;;;;;:::i;:::-;210:1058:218;;3232:526:43;210:1058:218;;;;;;;;;971:66:43;;;3383:63;;;;;;;;;;;;;;3232:526;-1:-1:-1;3379:302:43;;210:1058:218;;-1:-1:-1;;;3610:56:43;;;;;971:66;;;;210:1058:218;971:66:43;;210:1058:218;971:66:43;210:1058:218;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;3610:56;3379:302;3496:28;;;;;;;;971:66;;3379:302;;;;;2171:17;;;:::i;:::-;2204:27;;;;210:1058:218;;2523:15:43;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;;210:1058:218;;2519:123:43;7318:69:63;210:1058:218;-1:-1:-1;;;210:1058:218;;;;;;;;;:::i;:::-;;;;;;;;;;7276:25:63;;;;;;;:::i;:::-;7318:69;;:::i;:::-;;2519:123:43;;;;;;;;2523:28;;210:1058:218;2523:28:43;;971:66;210:1058:218;;-1:-1:-1;;;971:66:43;;;;;;;;;210:1058:218;971:66:43;;210:1058:218;971:66:43;210:1058:218;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;210:1058:218;;;3383:63:43;;;;;210:1058:218;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1898:6:46;210:1058:218;;;1873:80:46;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;210:1058:218;;;;;1971:30:46;1963:87;:::i;:::-;1303:62:39;;:::i;:::-;210:1058:218;;;;;;;;;;;;;;;;;;;;;;971:66:43;;;;;;;3330:17;;;;;;;;;;:::i;3232:526::-;210:1058:218;;;;;;;;;971:66:43;;;3383:63;;;;;;;;;;;;;;3232:526;-1:-1:-1;3379:302:43;;210:1058:218;;-1:-1:-1;;;3610:56:43;;;;;971:66;;;;;;;210:1058:218;971:66:43;210:1058:218;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;3610:56;3379:302;3496:28;;;;;;;;971:66;;3379:302;;;;;2171:17;;;:::i;:::-;2204:27;;;;210:1058:218;;2523:15:43;;;:28;;;2519:123;;3232:526;;;;;;210:1058:218;;2523:28:43;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;;;;;;210:1058:218;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;210:1058:218;;;;;;286:27;210:1058;286:27;;;;;;;210:1058;286:27;;:::i;:::-;210:1058;;;;;;;;;;;;;;;;;;;286:27;210:1058;;;;;;286:27;-1:-1:-1;210:1058:218;;;;-1:-1:-1;210:1058:218;:::o;:::-;;;;;;;;;;;;;319:28;210:1058;;;;;;319:28;-1:-1:-1;210:1058:218;;;;-1:-1:-1;210:1058:218;:::o;:::-;;;;-1:-1:-1;;;;;210:1058:218;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;210:1058:218;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1599:130:39:-;1513:6;210:1058:218;-1:-1:-1;;;;;210:1058:218;929:10:65;1662:23:39;210:1058:218;;1599:130:39:o;210:1058:218:-;;;;971:66:43;;;210:1058:218;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;1699:281:43;1713:19:63;;:23;210:1058:218;;-1:-1:-1;;;;;;;;;;;210:1058:218;;-1:-1:-1;;;;;;210:1058:218;-1:-1:-1;;;;;210:1058:218;;;;;;;;;1699:281:43:o;210:1058:218:-;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;210:1058:218;;;;:::o;:::-;;;:::o;7682:628:63:-;;;;7886:418;;;210:1058:218;;;7917:22:63;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;210:1058:218;;8212:17:63;:::o;210:1058:218:-;;;-1:-1:-1;;;210:1058:218;;;;;;;;;;;;;;;;;;;;7886:418:63;210:1058:218;;;;-1:-1:-1;8991:21:63;:17;;9163:142;;;;;;;8987:379;210:1058:218;;971:66:43;;;;9335:20:63;;210:1058:218;;9335:20:63;;;;210:1058:218;;;;;;;;;9011:1:63;210:1058:218;;;;;;;;;;;;9011:1:63;210:1058:218;;;;;;;;;;;;;;9335:20:63;;;;210:1058:218;;;;;;;;;;;;;;;;;;;-1:-1:-1;210:1058:218;;;-1:-1:-1;;210:1058:218;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "31740": [
        { "start": 1695, "length": 32 },
        { "start": 1991, "length": 32 },
        { "start": 2637, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "initiailize(address[],uint256[])": "6d819363",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "splitAddrs(uint256)": "1f9f20c9",
    "splitRatios(uint256)": "7ab0d1e8",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_splitAddrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_splitRatios\",\"type\":\"uint256[]\"}],\"name\":\"initiailize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"splitAddrs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"splitRatios\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/SuperRarePushSplitter.sol\":\"SuperRarePushSplitter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"src/utils/SuperRarePushSplitter.sol\":{\"keccak256\":\"0x054cf7a9bbda2fa90088278261484dad6e1a6a9a1f460a0ae91119f8bde02e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d77edff70ff38c09a4dfa2f805bf6e5df133c92c5e5bb6d3b93c0dc9bace5dab\",\"dweb:/ipfs/QmQgfBABsyawqpRCgXr1q8iZt6kyf3J1KgP8V7cQwLZ9Fy\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.18+commit.87f61d96" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_splitAddrs",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_splitRatios",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initiailize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "splitAddrs",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "splitRatios",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": { "details": "Returns the address of the current owner." },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@ensdomains/buffer/=lib/buffer/",
        "@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        "arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        "ds-test/=lib/ds-test/src/",
        "ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "rareprotocol/assets/=lib/assets/src/",
        "rareprotocol/aux/=src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        "royalty-registry/=lib/royalty-registry-solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/utils/SuperRarePushSplitter.sol": "SuperRarePushSplitter"
      },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "src/utils/SuperRarePushSplitter.sol": {
        "keccak256": "0x054cf7a9bbda2fa90088278261484dad6e1a6a9a1f460a0ae91119f8bde02e95",
        "urls": [
          "bzz-raw://d77edff70ff38c09a4dfa2f805bf6e5df133c92c5e5bb6d3b93c0dc9bace5dab",
          "dweb:/ipfs/QmQgfBABsyawqpRCgXr1q8iZt6kyf3J1KgP8V7cQwLZ9Fy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/utils/SuperRarePushSplitter.sol",
    "id": 90705,
    "exportedSymbols": {
      "AddressUpgradeable": [35328],
      "ContextUpgradeable": [35526],
      "ERC1967UpgradeUpgradeable": [31530],
      "IBeaconUpgradeable": [31540],
      "IERC1822ProxiableUpgradeable": [31206],
      "IERC1967Upgradeable": [31193],
      "Initializable": [31709],
      "OwnableUpgradeable": [31172],
      "StorageSlotUpgradeable": [35710],
      "SuperRarePushSplitter": [90704],
      "UUPSUpgradeable": [31845]
    },
    "nodeType": "SourceUnit",
    "src": "32:1237:218",
    "nodes": [
      {
        "id": 90574,
        "nodeType": "PragmaDirective",
        "src": "32:23:218",
        "nodes": [],
        "literals": ["solidity", "0.8", ".18"]
      },
      {
        "id": 90575,
        "nodeType": "ImportDirective",
        "src": "57:76:218",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 90705,
        "sourceUnit": 31846,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90576,
        "nodeType": "ImportDirective",
        "src": "134:74:218",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 90705,
        "sourceUnit": 31173,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 90704,
        "nodeType": "ContractDefinition",
        "src": "210:1058:218",
        "nodes": [
          {
            "id": 90583,
            "nodeType": "VariableDeclaration",
            "src": "286:27:218",
            "nodes": [],
            "constant": false,
            "functionSelector": "1f9f20c9",
            "mutability": "mutable",
            "name": "splitAddrs",
            "nameLocation": "303:10:218",
            "scope": 90704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 90581,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "286:7:218",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 90582,
              "nodeType": "ArrayTypeName",
              "src": "286:9:218",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 90586,
            "nodeType": "VariableDeclaration",
            "src": "319:28:218",
            "nodes": [],
            "constant": false,
            "functionSelector": "7ab0d1e8",
            "mutability": "mutable",
            "name": "splitRatios",
            "nameLocation": "336:11:218",
            "scope": 90704,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 90584,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "319:7:218",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 90585,
              "nodeType": "ArrayTypeName",
              "src": "319:9:218",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 90645,
            "nodeType": "FunctionDefinition",
            "src": "392:477:218",
            "nodes": [],
            "body": {
              "id": 90644,
              "nodeType": "Block",
              "src": "521:348:218",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 90598,
                            "name": "_splitAddrs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90589,
                            "src": "539:11:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 90599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "551:6:218",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "539:18:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 90600,
                            "name": "_splitRatios",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90592,
                            "src": "561:12:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 90601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "574:6:218",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "561:19:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "539:41:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742073616d65206c656e677468",
                        "id": 90603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "582:17:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3760941c8dc0c82a353f3010c54b4e101fbe2769fd49ca3f1fc2167ee772486d",
                          "typeString": "literal_string \"not same length\""
                        },
                        "value": "not same length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_3760941c8dc0c82a353f3010c54b4e101fbe2769fd49ca3f1fc2167ee772486d",
                          "typeString": "literal_string \"not same length\""
                        }
                      ],
                      "id": 90597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "531:7:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:69:218",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90605,
                  "nodeType": "ExpressionStatement",
                  "src": "531:69:218"
                },
                {
                  "assignments": [90607],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90607,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "618:5:218",
                      "nodeType": "VariableDeclaration",
                      "scope": 90644,
                      "src": "610:13:218",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 90606,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "610:7:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90609,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 90608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "626:1:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "610:17:218"
                },
                {
                  "body": {
                    "id": 90627,
                    "nodeType": "Block",
                    "src": "688:49:218",
                    "statements": [
                      {
                        "expression": {
                          "id": 90625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 90621,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 90607,
                            "src": "702:5:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 90622,
                              "name": "_splitRatios",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90592,
                              "src": "711:12:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 90624,
                            "indexExpression": {
                              "id": 90623,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90611,
                              "src": "724:1:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "711:15:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "702:24:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 90626,
                        "nodeType": "ExpressionStatement",
                        "src": "702:24:218"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 90617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 90614,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90611,
                      "src": "658:1:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 90615,
                        "name": "_splitRatios",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90592,
                        "src": "662:12:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 90616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "675:6:218",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "662:19:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "658:23:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90628,
                  "initializationExpression": {
                    "assignments": [90611],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 90611,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "651:1:218",
                        "nodeType": "VariableDeclaration",
                        "scope": 90628,
                        "src": "643:9:218",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "643:7:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 90613,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 90612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "655:1:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "643:13:218"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 90619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "683:3:218",
                      "subExpression": {
                        "id": 90618,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90611,
                        "src": "683:1:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 90620,
                    "nodeType": "ExpressionStatement",
                    "src": "683:3:218"
                  },
                  "nodeType": "ForStatement",
                  "src": "638:99:218"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 90630,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90607,
                          "src": "755:5:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 90631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "764:5:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "755:14:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820726174696f73",
                        "id": 90633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "771:19:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53f6eae4b90517657e0e05f0fdec41e9241226713c8e1e498779d2e3323bab9c",
                          "typeString": "literal_string \"not enough ratios\""
                        },
                        "value": "not enough ratios"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_53f6eae4b90517657e0e05f0fdec41e9241226713c8e1e498779d2e3323bab9c",
                          "typeString": "literal_string \"not enough ratios\""
                        }
                      ],
                      "id": 90629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "747:7:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:44:218",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90635,
                  "nodeType": "ExpressionStatement",
                  "src": "747:44:218"
                },
                {
                  "expression": {
                    "id": 90638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90636,
                      "name": "splitAddrs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90583,
                      "src": "802:10:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 90637,
                      "name": "_splitAddrs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90589,
                      "src": "815:11:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "802:24:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 90639,
                  "nodeType": "ExpressionStatement",
                  "src": "802:24:218"
                },
                {
                  "expression": {
                    "id": 90642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90640,
                      "name": "splitRatios",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90586,
                      "src": "836:11:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 90641,
                      "name": "_splitRatios",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90592,
                      "src": "850:12:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "src": "836:26:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 90643,
                  "nodeType": "ExpressionStatement",
                  "src": "836:26:218"
                }
              ]
            },
            "functionSelector": "6d819363",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 90595,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 90594,
                  "name": "initializer",
                  "nameLocations": ["509:11:218"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31611,
                  "src": "509:11:218"
                },
                "nodeType": "ModifierInvocation",
                "src": "509:11:218"
              }
            ],
            "name": "initiailize",
            "nameLocation": "401:11:218",
            "parameters": {
              "id": 90593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90589,
                  "mutability": "mutable",
                  "name": "_splitAddrs",
                  "nameLocation": "441:11:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 90645,
                  "src": "422:30:218",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 90587,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "422:7:218",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 90588,
                    "nodeType": "ArrayTypeName",
                    "src": "422:9:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90592,
                  "mutability": "mutable",
                  "name": "_splitRatios",
                  "nameLocation": "481:12:218",
                  "nodeType": "VariableDeclaration",
                  "scope": 90645,
                  "src": "462:31:218",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 90590,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "462:7:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 90591,
                    "nodeType": "ArrayTypeName",
                    "src": "462:9:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:87:218"
            },
            "returnParameters": {
              "id": 90596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:0:218"
            },
            "scope": 90704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 90654,
            "nodeType": "FunctionDefinition",
            "src": "875:66:218",
            "nodes": [],
            "body": {
              "id": 90653,
              "nodeType": "Block",
              "src": "939:2:218",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [31839],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 90651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 90650,
                  "name": "onlyOwner",
                  "nameLocations": ["929:9:218"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "929:9:218"
                },
                "nodeType": "ModifierInvocation",
                "src": "929:9:218"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "884:17:218",
            "overrides": {
              "id": 90649,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "920:8:218"
            },
            "parameters": {
              "id": 90648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90647,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 90654,
                  "src": "902:7:218",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:218",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "901:9:218"
            },
            "returnParameters": {
              "id": 90652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "939:0:218"
            },
            "scope": 90704,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 90703,
            "nodeType": "FunctionDefinition",
            "src": "947:319:218",
            "nodes": [],
            "body": {
              "id": 90702,
              "nodeType": "Block",
              "src": "974:292:218",
              "nodes": [],
              "statements": [
                {
                  "assignments": [90658],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90658,
                      "mutability": "mutable",
                      "name": "amt",
                      "nameLocation": "992:3:218",
                      "nodeType": "VariableDeclaration",
                      "scope": 90702,
                      "src": "984:11:218",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 90657,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "984:7:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 90661,
                  "initialValue": {
                    "expression": {
                      "id": 90659,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "998:3:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 90660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1002:5:218",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "998:9:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "984:23:218"
                },
                {
                  "body": {
                    "id": 90700,
                    "nodeType": "Block",
                    "src": "1065:195:218",
                    "statements": [
                      {
                        "assignments": [90674],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90674,
                            "mutability": "mutable",
                            "name": "indAmt",
                            "nameLocation": "1087:6:218",
                            "nodeType": "VariableDeclaration",
                            "scope": 90700,
                            "src": "1079:14:218",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 90673,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1079:7:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 90683,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 90682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 90679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 90675,
                                  "name": "amt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90658,
                                  "src": "1097:3:218",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 90676,
                                    "name": "splitRatios",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90586,
                                    "src": "1103:11:218",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 90678,
                                  "indexExpression": {
                                    "id": 90677,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90663,
                                    "src": "1115:1:218",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1103:14:218",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1097:20:218",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 90680,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1096:22:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130303030",
                            "id": 90681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1121:5:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "1096:30:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1079:47:218"
                      },
                      {
                        "assignments": [90685, null],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90685,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1146:7:218",
                            "nodeType": "VariableDeclaration",
                            "scope": 90700,
                            "src": "1141:12:218",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 90684,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1141:4:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 90694,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 90692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1193:2:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "baseExpression": {
                                  "id": 90686,
                                  "name": "splitAddrs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90583,
                                  "src": "1159:10:218",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 90688,
                                "indexExpression": {
                                  "id": 90687,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90663,
                                  "src": "1170:1:218",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1159:13:218",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 90689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1173:4:218",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1159:18:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 90691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": ["value"],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 90690,
                                "name": "indAmt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 90674,
                                "src": "1185:6:218",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1159:33:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 90693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1159:37:218",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1140:56:218"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 90696,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90685,
                              "src": "1218:7:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "73656e64206e6f74207375636365737366756c",
                              "id": 90697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1227:21:218",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b5769f733654b44ea71614fa753e087b3dbb0f039a6a93f4f01e88ba6739fef0",
                                "typeString": "literal_string \"send not successful\""
                              },
                              "value": "send not successful"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b5769f733654b44ea71614fa753e087b3dbb0f039a6a93f4f01e88ba6739fef0",
                                "typeString": "literal_string \"send not successful\""
                              }
                            ],
                            "id": 90695,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "1210:7:218",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 90698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1210:39:218",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 90699,
                        "nodeType": "ExpressionStatement",
                        "src": "1210:39:218"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 90669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 90666,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90663,
                      "src": "1037:1:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 90667,
                        "name": "splitAddrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90583,
                        "src": "1041:10:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 90668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1052:6:218",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1041:17:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1037:21:218",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90701,
                  "initializationExpression": {
                    "assignments": [90663],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 90663,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1030:1:218",
                        "nodeType": "VariableDeclaration",
                        "scope": 90701,
                        "src": "1022:9:218",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90662,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1022:7:218",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 90665,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 90664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1034:1:218",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1022:13:218"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 90671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1060:3:218",
                      "subExpression": {
                        "id": 90670,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90663,
                        "src": "1060:1:218",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 90672,
                    "nodeType": "ExpressionStatement",
                    "src": "1060:3:218"
                  },
                  "nodeType": "ForStatement",
                  "src": "1017:243:218"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 90655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "954:2:218"
            },
            "returnParameters": {
              "id": 90656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "974:0:218"
            },
            "scope": 90704,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 90577,
              "name": "UUPSUpgradeable",
              "nameLocations": ["244:15:218"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31845,
              "src": "244:15:218"
            },
            "id": 90578,
            "nodeType": "InheritanceSpecifier",
            "src": "244:15:218"
          },
          {
            "baseName": {
              "id": 90579,
              "name": "OwnableUpgradeable",
              "nameLocations": ["261:18:218"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31172,
              "src": "261:18:218"
            },
            "id": 90580,
            "nodeType": "InheritanceSpecifier",
            "src": "261:18:218"
          }
        ],
        "canonicalName": "SuperRarePushSplitter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          90704, 31172, 35526, 31845, 31530, 31193, 31206, 31709
        ],
        "name": "SuperRarePushSplitter",
        "nameLocation": "219:21:218",
        "scope": 90705,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 218
}
