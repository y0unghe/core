{
  "abi": [
    {
      "type": "function",
      "name": "addRewards",
      "inputs": [
        { "name": "_donor", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "spender", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calculatePurchaseReturn",
      "inputs": [
        { "name": "_totalSRare", "type": "uint120", "internalType": "uint120" },
        {
          "name": "_stakedAmount",
          "type": "uint120",
          "internalType": "uint120"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "calculateSaleReturn",
      "inputs": [
        {
          "name": "_totalSRareByUser",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_totalRareStakedByUser",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_unstakeAmount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "claimRewards",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" },
        { "name": "_numRounds", "type": "uint8", "internalType": "uint8" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAllTimeRewards",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAmountStakedByUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimableRewardsForUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" },
        { "name": "_numRounds", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCreationTime",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentRound",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getHistoricalRewardsForUserForRounds",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" },
        { "name": "_rounds", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLastSnapshotTimestamp",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRoundRewards",
      "inputs": [
        { "name": "_round", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingRegistry",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSumOfAllClaimed",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTargetBeingStakedOn",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_userStakedTo",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_stakingRegistry",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_creator", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "stake",
      "inputs": [
        { "name": "_amount", "type": "uint120", "internalType": "uint120" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "takeSnapshot",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unstake",
      "inputs": [
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AddRewards",
      "inputs": [
        {
          "name": "_donor",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_round",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_totalAmountAdded",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_newRoundRewardAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "spender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardClaimed",
      "inputs": [
        {
          "name": "_msgSender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_claimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_amountToStaker",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Stake",
      "inputs": [
        {
          "name": "_staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_amountStaking",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_totalAmountStaked",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_amountSRareReceived",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakingSnapshot",
      "inputs": [
        {
          "name": "_lastSnapshotTimestamp",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_currentSnapshotTimestamp",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_round",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unstake",
      "inputs": [
        {
          "name": "_staker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_amountUnstaking",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_totalAmountStaked",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_amountRareBurned",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_amountSRareSold",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "CannotAddZeroRewards", "inputs": [] },
    { "type": "error", "name": "CannotClaimCurrentRound", "inputs": [] },
    { "type": "error", "name": "ClaimingTooManyRounds", "inputs": [] },
    { "type": "error", "name": "ClaimingZeroRounds", "inputs": [] },
    { "type": "error", "name": "InsufficientStakedRare", "inputs": [] },
    { "type": "error", "name": "InsufficientSyntheticRare", "inputs": [] },
    { "type": "error", "name": "RewardAlreadyClaimed", "inputs": [] },
    { "type": "error", "name": "Unauthorized", "inputs": [] },
    { "type": "error", "name": "ZeroAddressUnsupported", "inputs": [] }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "addRewards(address,uint256)": "a9fc507b",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "calculatePurchaseReturn(uint120,uint120)": "d775a4c7",
    "calculateSaleReturn(uint256,uint256,uint256)": "74293bf8",
    "claimRewards(address,uint8)": "b5fc2f85",
    "getAllTimeRewards()": "94616420",
    "getAmountStakedByUser(address)": "399d99ec",
    "getClaimableRewardsForUser(address,uint256)": "636f5b27",
    "getCreationTime()": "e6519a35",
    "getCurrentRound()": "a32bf597",
    "getHistoricalRewardsForUserForRounds(address,uint256[])": "cae06944",
    "getLastSnapshotTimestamp()": "7c27ff86",
    "getRoundRewards(uint256)": "91e2057e",
    "getStakingRegistry()": "61347782",
    "getSumOfAllClaimed()": "3b1c612e",
    "getTargetBeingStakedOn()": "3b248c76",
    "initialize(address,address,address)": "c0c53b8b",
    "name()": "06fdde03",
    "stake(uint120)": "9ca92dec",
    "symbol()": "95d89b41",
    "takeSnapshot()": "b3d3d37e",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unstake(uint256)": "2e17de78"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CannotAddZeroRewards\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotClaimCurrentRound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimingTooManyRounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimingZeroRounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientStakedRare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSyntheticRare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_donor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newRoundRewardAmount\",\"type\":\"uint256\"}],\"name\":\"AddRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToStaker\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountStaking\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSRareReceived\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastSnapshotTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentSnapshotTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"StakingSnapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountUnstaking\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountRareBurned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSRareSold\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint120\",\"name\":\"_totalSRare\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"_stakedAmount\",\"type\":\"uint120\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSRareByUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRareStakedByUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unstakeAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_numRounds\",\"type\":\"uint8\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTimeRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAmountStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numRounds\",\"type\":\"uint256\"}],\"name\":\"getClaimableRewardsForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_rounds\",\"type\":\"uint256[]\"}],\"name\":\"getHistoricalRewardsForUserForRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastSnapshotTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getRoundRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSumOfAllClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargetBeingStakedOn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userStakedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint120\",\"name\":\"_amount\",\"type\":\"uint120\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addRewards(address,uint256)\":{\"params\":{\"_amount\":\"Amount of $RARE being staked.\",\"_donor\":\"Address of the account donating the $RARE.\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"calculatePurchaseReturn(uint120,uint120)\":{\"params\":{\"_stakedAmount\":\"Amount of RARE being staked.\",\"_totalSRare\":\"Current supply of sRare.\"},\"returns\":{\"_0\":\"uint256 Amount of synthetic tokens one would get for staking {_stakedAmount} given a totalSupply of {_totalSRare}.\"}},\"calculateSaleReturn(uint256,uint256,uint256)\":{\"params\":{\"_totalRareStakedByUser\":\"Total Amount of RARE staked by the given user.\",\"_totalSRareByUser\":\"Current balance of sRARE held by the given user.\",\"_unstakeAmount\":\"Amount of sRare being traded in.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens one would get for unstaking {_unstakeAmount} given {_totalSRareByUser} and {_totalRareStakedByUser}.\"}},\"claimRewards(address,uint8)\":{\"params\":{\"_numRounds\":\"uint256 number of rounds to claim since last claim.\",\"_user\":\"Address of user to claim on behalf of.\"}},\"getAllTimeRewards()\":{\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens allocated as rewards.\"}},\"getAmountStakedByUser(address)\":{\"params\":{\"_user\":\"Address of staker.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE staked.\"}},\"getClaimableRewardsForUser(address,uint256)\":{\"params\":{\"_numRounds\":\"Address of the user to get rewards.\",\"_user\":\"Address of the user to get rewards.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens rewarded.\"}},\"getCreationTime()\":{\"returns\":{\"_0\":\"uint256 unix creation time of the contract.\"}},\"getCurrentRound()\":{\"returns\":{\"_0\":\"uint256 Claim round id.\"}},\"getHistoricalRewardsForUserForRounds(address,uint256[])\":{\"params\":{\"_rounds\":\"List of uint256 round ids to look up the rewards.\",\"_user\":\"Address of the user to get rewards.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens rewarded.\"}},\"getLastSnapshotTimestamp()\":{\"returns\":{\"_0\":\"uint256 unix time of the most recent snapshot.\"}},\"getRoundRewards(uint256)\":{\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens allocated as rewards for round.\"}},\"getStakingRegistry()\":{\"returns\":{\"_0\":\"address of the staking registry.\"}},\"getSumOfAllClaimed()\":{\"returns\":{\"_0\":\"uint256 amount of rewards claimed.\"}},\"getTargetBeingStakedOn()\":{\"returns\":{\"_0\":\"Address of target being staked on;\"}},\"name()\":{\"returns\":{\"_0\":\"Name of the synthetic asset.\"}},\"stake(uint120)\":{\"params\":{\"_amount\":\"Amount of $RARE being staked.\"}},\"symbol()\":{\"returns\":{\"_0\":\"Symbol of the synthetic asset.\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"unstake(uint256)\":{\"params\":{\"_amount\":\"Amount of synthetic tokens to unstake.\"}}},\"title\":\"IRarityPool\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotAddZeroRewards()\":[{\"notice\":\"Error emitted via {addRewards} if adding 0 rewards.\"}],\"CannotClaimCurrentRound()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if claiming current round.\"}],\"ClaimingTooManyRounds()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if too many rounds are supplied.\"}],\"ClaimingZeroRounds()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if claiming no rounds.\"}],\"InsufficientStakedRare()\":[{\"notice\":\"Error emitted via {unstake} when the sale return proves greater than the amount staked. This should be impossible.\"}],\"InsufficientSyntheticRare()\":[{\"notice\":\"Error emitted via {unstake} when unstaking more synthetic tokens than is in their balance.\"}],\"RewardAlreadyClaimed()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if sender has already claimed their reward one of the supplied rounds.\"}],\"Unauthorized()\":[{\"notice\":\"Error emitted when user doesnt meet the criteria for call.\"}],\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"kind\":\"user\",\"methods\":{\"addRewards(address,uint256)\":{\"notice\":\"Allocates rewards for the current round with the given amount.\"},\"calculatePurchaseReturn(uint120,uint120)\":{\"notice\":\"Calculates the number of sRare yielded from staking.\"},\"calculateSaleReturn(uint256,uint256,uint256)\":{\"notice\":\"Calculates the number of rare yielded from unstaking.\"},\"claimRewards(address,uint8)\":{\"notice\":\"Claim rewards for the _user for the number of rounds supplied since last claim. Rewards are proportional to the synthetic tokens held during the snapshot associated with each round. Throws if user has already claimed the latest round. Throws if current round is being claimed.\"},\"getAllTimeRewards()\":{\"notice\":\"Total rewards snapshotted since con.\"},\"getAmountStakedByUser(address)\":{\"notice\":\"Query total amount of $RARE a user has staked on this contract.\"},\"getClaimableRewardsForUser(address,uint256)\":{\"notice\":\"Query the available rewards for claim of the supplied user address for the number of rounds supplied. \"},\"getCreationTime()\":{\"notice\":\"Get the unix creation time of the staking contract.\"},\"getCurrentRound()\":{\"notice\":\"Query current round. The current round is accumulating rewards.\"},\"getHistoricalRewardsForUserForRounds(address,uint256[])\":{\"notice\":\"Query rewards for the supplied user address for the round supplied rounds. Does not omit rewards for rounds that have already been claimed. Allows for easier historical lookups.\"},\"getLastSnapshotTimestamp()\":{\"notice\":\"Get the unix time of the most recent snapshot.\"},\"getRoundRewards(uint256)\":{\"notice\":\"Total rewards available for the supplied round.\"},\"getStakingRegistry()\":{\"notice\":\"Return the staking registry of the pool\"},\"getSumOfAllClaimed()\":{\"notice\":\"Total amount of Rewards claimed.\"},\"getTargetBeingStakedOn()\":{\"notice\":\"Query the target being staked on by this contract.\"},\"name()\":{\"notice\":\"Name of the synthetic asset.\"},\"stake(uint120)\":{\"notice\":\"Stake $RARE tokens to the target associated with the contract and receive synthetic tokens in return.\"},\"symbol()\":{\"notice\":\"Symbol of the synthetic asset.\"},\"takeSnapshot()\":{\"notice\":\"Snapshots the rewards for the current round. Anyone can call this.\"},\"unstake(uint256)\":{\"notice\":\"Unstake by returning synthetic tokens and receiving previously staked $RARE in return.\"}},\"notice\":\"The Rare Staking Pool ERC20 (Rarity Pool) interface containing all functions, events, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/token/IRarityPool.sol\":\"IRarityPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14\",\"dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.18+commit.87f61d96" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "type": "error", "name": "CannotAddZeroRewards" },
        { "inputs": [], "type": "error", "name": "CannotClaimCurrentRound" },
        { "inputs": [], "type": "error", "name": "ClaimingTooManyRounds" },
        { "inputs": [], "type": "error", "name": "ClaimingZeroRounds" },
        { "inputs": [], "type": "error", "name": "InsufficientStakedRare" },
        { "inputs": [], "type": "error", "name": "InsufficientSyntheticRare" },
        { "inputs": [], "type": "error", "name": "RewardAlreadyClaimed" },
        { "inputs": [], "type": "error", "name": "Unauthorized" },
        { "inputs": [], "type": "error", "name": "ZeroAddressUnsupported" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_donor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_round",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_totalAmountAdded",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_newRoundRewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_msgSender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountToStaker",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountStaking",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_totalAmountStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountSRareReceived",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Stake",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_lastSnapshotTimestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_currentSnapshotTimestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_round",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakingSnapshot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountUnstaking",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_totalAmountStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountRareBurned",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountSRareSold",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstake",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_donor", "type": "address" },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addRewards"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "spender", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint120",
              "name": "_totalSRare",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "_stakedAmount",
              "type": "uint120"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculatePurchaseReturn",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_totalSRareByUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalRareStakedByUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_unstakeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateSaleReturn",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" },
            { "internalType": "uint8", "name": "_numRounds", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllTimeRewards",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountStakedByUser",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" },
            {
              "internalType": "uint256",
              "name": "_numRounds",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimableRewardsForUser",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreationTime",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentRound",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" },
            {
              "internalType": "uint256[]",
              "name": "_rounds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHistoricalRewardsForUserForRounds",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLastSnapshotTimestamp",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_round", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoundRewards",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingRegistry",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSumOfAllClaimed",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTargetBeingStakedOn",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_userStakedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            },
            { "internalType": "address", "name": "_creator", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint120", "name": "_amount", "type": "uint120" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "takeSnapshot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addRewards(address,uint256)": {
            "params": {
              "_amount": "Amount of $RARE being staked.",
              "_donor": "Address of the account donating the $RARE."
            }
          },
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by `account`."
          },
          "calculatePurchaseReturn(uint120,uint120)": {
            "params": {
              "_stakedAmount": "Amount of RARE being staked.",
              "_totalSRare": "Current supply of sRare."
            },
            "returns": {
              "_0": "uint256 Amount of synthetic tokens one would get for staking {_stakedAmount} given a totalSupply of {_totalSRare}."
            }
          },
          "calculateSaleReturn(uint256,uint256,uint256)": {
            "params": {
              "_totalRareStakedByUser": "Total Amount of RARE staked by the given user.",
              "_totalSRareByUser": "Current balance of sRARE held by the given user.",
              "_unstakeAmount": "Amount of sRare being traded in."
            },
            "returns": {
              "_0": "uint256 Amount of $RARE tokens one would get for unstaking {_unstakeAmount} given {_totalSRareByUser} and {_totalRareStakedByUser}."
            }
          },
          "claimRewards(address,uint8)": {
            "params": {
              "_numRounds": "uint256 number of rounds to claim since last claim.",
              "_user": "Address of user to claim on behalf of."
            }
          },
          "getAllTimeRewards()": {
            "returns": {
              "_0": "uint256 Amount of $RARE tokens allocated as rewards."
            }
          },
          "getAmountStakedByUser(address)": {
            "params": { "_user": "Address of staker." },
            "returns": { "_0": "uint256 Amount of $RARE staked." }
          },
          "getClaimableRewardsForUser(address,uint256)": {
            "params": {
              "_numRounds": "Address of the user to get rewards.",
              "_user": "Address of the user to get rewards."
            },
            "returns": { "_0": "uint256 Amount of $RARE tokens rewarded." }
          },
          "getCreationTime()": {
            "returns": { "_0": "uint256 unix creation time of the contract." }
          },
          "getCurrentRound()": {
            "returns": { "_0": "uint256 Claim round id." }
          },
          "getHistoricalRewardsForUserForRounds(address,uint256[])": {
            "params": {
              "_rounds": "List of uint256 round ids to look up the rewards.",
              "_user": "Address of the user to get rewards."
            },
            "returns": { "_0": "uint256 Amount of $RARE tokens rewarded." }
          },
          "getLastSnapshotTimestamp()": {
            "returns": {
              "_0": "uint256 unix time of the most recent snapshot."
            }
          },
          "getRoundRewards(uint256)": {
            "returns": {
              "_0": "uint256 Amount of $RARE tokens allocated as rewards for round."
            }
          },
          "getStakingRegistry()": {
            "returns": { "_0": "address of the staking registry." }
          },
          "getSumOfAllClaimed()": {
            "returns": { "_0": "uint256 amount of rewards claimed." }
          },
          "getTargetBeingStakedOn()": {
            "returns": { "_0": "Address of target being staked on;" }
          },
          "name()": { "returns": { "_0": "Name of the synthetic asset." } },
          "stake(uint120)": {
            "params": { "_amount": "Amount of $RARE being staked." }
          },
          "symbol()": { "returns": { "_0": "Symbol of the synthetic asset." } },
          "totalSupply()": {
            "details": "Returns the amount of tokens in existence."
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "unstake(uint256)": {
            "params": { "_amount": "Amount of synthetic tokens to unstake." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addRewards(address,uint256)": {
            "notice": "Allocates rewards for the current round with the given amount."
          },
          "calculatePurchaseReturn(uint120,uint120)": {
            "notice": "Calculates the number of sRare yielded from staking."
          },
          "calculateSaleReturn(uint256,uint256,uint256)": {
            "notice": "Calculates the number of rare yielded from unstaking."
          },
          "claimRewards(address,uint8)": {
            "notice": "Claim rewards for the _user for the number of rounds supplied since last claim. Rewards are proportional to the synthetic tokens held during the snapshot associated with each round. Throws if user has already claimed the latest round. Throws if current round is being claimed."
          },
          "getAllTimeRewards()": {
            "notice": "Total rewards snapshotted since con."
          },
          "getAmountStakedByUser(address)": {
            "notice": "Query total amount of $RARE a user has staked on this contract."
          },
          "getClaimableRewardsForUser(address,uint256)": {
            "notice": "Query the available rewards for claim of the supplied user address for the number of rounds supplied. "
          },
          "getCreationTime()": {
            "notice": "Get the unix creation time of the staking contract."
          },
          "getCurrentRound()": {
            "notice": "Query current round. The current round is accumulating rewards."
          },
          "getHistoricalRewardsForUserForRounds(address,uint256[])": {
            "notice": "Query rewards for the supplied user address for the round supplied rounds. Does not omit rewards for rounds that have already been claimed. Allows for easier historical lookups."
          },
          "getLastSnapshotTimestamp()": {
            "notice": "Get the unix time of the most recent snapshot."
          },
          "getRoundRewards(uint256)": {
            "notice": "Total rewards available for the supplied round."
          },
          "getStakingRegistry()": {
            "notice": "Return the staking registry of the pool"
          },
          "getSumOfAllClaimed()": {
            "notice": "Total amount of Rewards claimed."
          },
          "getTargetBeingStakedOn()": {
            "notice": "Query the target being staked on by this contract."
          },
          "name()": { "notice": "Name of the synthetic asset." },
          "stake(uint120)": {
            "notice": "Stake $RARE tokens to the target associated with the contract and receive synthetic tokens in return."
          },
          "symbol()": { "notice": "Symbol of the synthetic asset." },
          "takeSnapshot()": {
            "notice": "Snapshots the rewards for the current round. Anyone can call this."
          },
          "unstake(uint256)": {
            "notice": "Unstake by returning synthetic tokens and receiving previously staked $RARE in return."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/buffer/=lib/buffer/",
        "@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        "arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        "ds-test/=lib/ds-test/src/",
        "ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "rareprotocol/assets/=lib/assets/src/",
        "rareprotocol/aux/=src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        "royalty-registry/=lib/royalty-registry-solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/staking/token/IRarityPool.sol": "IRarityPool"
      },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b",
        "urls": [
          "bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14",
          "dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/token/IRarityPool.sol",
    "id": 67271,
    "exportedSymbols": { "IERC20Upgradeable": [32746], "IRarityPool": [67270] },
    "nodeType": "SourceUnit",
    "src": "32:8521:185",
    "nodes": [
      {
        "id": 67033,
        "nodeType": "PragmaDirective",
        "src": "32:23:185",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".0"]
      },
      {
        "id": 67035,
        "nodeType": "ImportDirective",
        "src": "57:102:185",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/interfaces/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67271,
        "sourceUnit": 31197,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67034,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32746,
              "src": "65:17:185",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67270,
        "nodeType": "ContractDefinition",
        "src": "319:8233:185",
        "nodes": [
          {
            "id": 67046,
            "nodeType": "EventDefinition",
            "src": "562:115:185",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b7",
            "name": "RewardClaimed",
            "nameLocation": "568:13:185",
            "parameters": {
              "id": 67045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67040,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_msgSender",
                  "nameLocation": "603:10:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67046,
                  "src": "587:26:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67042,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "635:8:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67046,
                  "src": "619:24:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountToStaker",
                  "nameLocation": "657:15:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67046,
                  "src": "649:23:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67043,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:95:185"
            }
          },
          {
            "id": 67056,
            "nodeType": "EventDefinition",
            "src": "681:139:185",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c446",
            "name": "Stake",
            "nameLocation": "687:5:185",
            "parameters": {
              "id": 67055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67048,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "714:7:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67056,
                  "src": "698:23:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67050,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountStaking",
                  "nameLocation": "735:14:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67056,
                  "src": "727:22:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67052,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_totalAmountStaked",
                  "nameLocation": "763:18:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67056,
                  "src": "755:26:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "755:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67054,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountSRareReceived",
                  "nameLocation": "795:20:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67056,
                  "src": "787:28:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:127:185"
            }
          },
          {
            "id": 67068,
            "nodeType": "EventDefinition",
            "src": "824:170:185",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "05b744e3e9358bc00ba3cc0c6606a4d6536134dba00b2d2ee4b5de169acd6427",
            "name": "Unstake",
            "nameLocation": "830:7:185",
            "parameters": {
              "id": 67067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67058,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "859:7:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67068,
                  "src": "843:23:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountUnstaking",
                  "nameLocation": "880:16:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67068,
                  "src": "872:24:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67062,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_totalAmountStaked",
                  "nameLocation": "910:18:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67068,
                  "src": "902:26:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67064,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountRareBurned",
                  "nameLocation": "942:17:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67068,
                  "src": "934:25:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67066,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountSRareSold",
                  "nameLocation": "973:16:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67068,
                  "src": "965:24:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:156:185"
            }
          },
          {
            "id": 67076,
            "nodeType": "EventDefinition",
            "src": "998:105:185",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f93143fb49fc8d2b453d1e417424c14ace8efd210d63494dbaa7998e5affe025",
            "name": "StakingSnapshot",
            "nameLocation": "1004:15:185",
            "parameters": {
              "id": 67075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67070,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_lastSnapshotTimestamp",
                  "nameLocation": "1028:22:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67076,
                  "src": "1020:30:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67072,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_currentSnapshotTimestamp",
                  "nameLocation": "1060:25:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67076,
                  "src": "1052:33:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67074,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1095:6:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67076,
                  "src": "1087:14:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1019:83:185"
            }
          },
          {
            "id": 67088,
            "nodeType": "EventDefinition",
            "src": "1107:164:185",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8f1f72719a43990ee22667a803313283dbcb7402f1ab7dbf4ab92527e7414aa1",
            "name": "AddRewards",
            "nameLocation": "1113:10:185",
            "parameters": {
              "id": 67087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67078,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_donor",
                  "nameLocation": "1145:6:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67088,
                  "src": "1129:22:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67080,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1173:6:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67088,
                  "src": "1157:22:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1193:7:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67088,
                  "src": "1185:15:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_totalAmountAdded",
                  "nameLocation": "1214:17:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67088,
                  "src": "1206:25:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67086,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newRoundRewardAmount",
                  "nameLocation": "1245:21:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67088,
                  "src": "1237:29:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:147:185"
            }
          },
          {
            "id": 67091,
            "nodeType": "ErrorDefinition",
            "src": "1549:21:185",
            "nodes": [],
            "documentation": {
              "id": 67089,
              "nodeType": "StructuredDocumentation",
              "src": "1476:70:185",
              "text": "@notice Error emitted when user doesnt meet the criteria for call."
            },
            "errorSelector": "82b42900",
            "name": "Unauthorized",
            "nameLocation": "1555:12:185",
            "parameters": {
              "id": 67090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:2:185"
            }
          },
          {
            "id": 67094,
            "nodeType": "ErrorDefinition",
            "src": "1701:29:185",
            "nodes": [],
            "documentation": {
              "id": 67092,
              "nodeType": "StructuredDocumentation",
              "src": "1574:124:185",
              "text": "@notice Error emitted via {claimRewardsForRounds} if sender has already claimed their reward one of the supplied rounds."
            },
            "errorSelector": "b3f8c0dc",
            "name": "RewardAlreadyClaimed",
            "nameLocation": "1707:20:185",
            "parameters": {
              "id": 67093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:2:185"
            }
          },
          {
            "id": 67097,
            "nodeType": "ErrorDefinition",
            "src": "1823:30:185",
            "nodes": [],
            "documentation": {
              "id": 67095,
              "nodeType": "StructuredDocumentation",
              "src": "1734:86:185",
              "text": "@notice Error emitted via {claimRewardsForRounds} if too many rounds are supplied."
            },
            "errorSelector": "fcbc706a",
            "name": "ClaimingTooManyRounds",
            "nameLocation": "1829:21:185",
            "parameters": {
              "id": 67096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:185"
            }
          },
          {
            "id": 67100,
            "nodeType": "ErrorDefinition",
            "src": "1940:32:185",
            "nodes": [],
            "documentation": {
              "id": 67098,
              "nodeType": "StructuredDocumentation",
              "src": "1857:80:185",
              "text": "@notice Error emitted via {claimRewardsForRounds} if claiming current round."
            },
            "errorSelector": "bbbbe824",
            "name": "CannotClaimCurrentRound",
            "nameLocation": "1946:23:185",
            "parameters": {
              "id": 67099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:2:185"
            }
          },
          {
            "id": 67103,
            "nodeType": "ErrorDefinition",
            "src": "2055:27:185",
            "nodes": [],
            "documentation": {
              "id": 67101,
              "nodeType": "StructuredDocumentation",
              "src": "1976:76:185",
              "text": "@notice Error emitted via {claimRewardsForRounds} if claiming no rounds."
            },
            "errorSelector": "54801204",
            "name": "ClaimingZeroRounds",
            "nameLocation": "2061:18:185",
            "parameters": {
              "id": 67102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2079:2:185"
            }
          },
          {
            "id": 67106,
            "nodeType": "ErrorDefinition",
            "src": "2191:34:185",
            "nodes": [],
            "documentation": {
              "id": 67104,
              "nodeType": "StructuredDocumentation",
              "src": "2086:102:185",
              "text": "@notice Error emitted via {unstake} when unstaking more synthetic tokens than is in their balance."
            },
            "errorSelector": "2d292826",
            "name": "InsufficientSyntheticRare",
            "nameLocation": "2197:25:185",
            "parameters": {
              "id": 67105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:2:185"
            }
          },
          {
            "id": 67109,
            "nodeType": "ErrorDefinition",
            "src": "2358:31:185",
            "nodes": [],
            "documentation": {
              "id": 67107,
              "nodeType": "StructuredDocumentation",
              "src": "2229:126:185",
              "text": "@notice Error emitted via {unstake} when the sale return proves greater than the amount staked. This should be impossible."
            },
            "errorSelector": "4d83a5dc",
            "name": "InsufficientStakedRare",
            "nameLocation": "2364:22:185",
            "parameters": {
              "id": 67108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:2:185"
            }
          },
          {
            "id": 67112,
            "nodeType": "ErrorDefinition",
            "src": "2459:29:185",
            "nodes": [],
            "documentation": {
              "id": 67110,
              "nodeType": "StructuredDocumentation",
              "src": "2393:63:185",
              "text": "@notice Error emitted via {addRewards} if adding 0 rewards."
            },
            "errorSelector": "db1985f8",
            "name": "CannotAddZeroRewards",
            "nameLocation": "2465:20:185",
            "parameters": {
              "id": 67111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2485:2:185"
            }
          },
          {
            "id": 67115,
            "nodeType": "ErrorDefinition",
            "src": "2566:31:185",
            "nodes": [],
            "documentation": {
              "id": 67113,
              "nodeType": "StructuredDocumentation",
              "src": "2492:71:185",
              "text": "@notice Emitted when Zero address provided where it is not allowed."
            },
            "errorSelector": "78279125",
            "name": "ZeroAddressUnsupported",
            "nameLocation": "2572:22:185",
            "parameters": {
              "id": 67114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:2:185"
            }
          },
          {
            "id": 67124,
            "nodeType": "FunctionDefinition",
            "src": "2801:112:185",
            "nodes": [],
            "functionSelector": "c0c53b8b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "2810:10:185",
            "parameters": {
              "id": 67122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67117,
                  "mutability": "mutable",
                  "name": "_userStakedTo",
                  "nameLocation": "2834:13:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67124,
                  "src": "2826:21:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67119,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "2861:16:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67124,
                  "src": "2853:24:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67121,
                  "mutability": "mutable",
                  "name": "_creator",
                  "nameLocation": "2891:8:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67124,
                  "src": "2883:16:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2820:83:185"
            },
            "returnParameters": {
              "id": 67123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2912:0:185"
            },
            "scope": 67270,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67132,
            "nodeType": "FunctionDefinition",
            "src": "3318:62:185",
            "nodes": [],
            "documentation": {
              "id": 67125,
              "nodeType": "StructuredDocumentation",
              "src": "3127:188:185",
              "text": "@notice Allocates rewards for the current round with the given amount.\n @param _donor Address of the account donating the $RARE.\n @param _amount Amount of $RARE being staked."
            },
            "functionSelector": "a9fc507b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addRewards",
            "nameLocation": "3327:10:185",
            "parameters": {
              "id": 67130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67127,
                  "mutability": "mutable",
                  "name": "_donor",
                  "nameLocation": "3346:6:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67132,
                  "src": "3338:14:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67129,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3362:7:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67132,
                  "src": "3354:15:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3354:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:33:185"
            },
            "returnParameters": {
              "id": 67131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3379:0:185"
            },
            "scope": 67270,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67136,
            "nodeType": "FunctionDefinition",
            "src": "3465:33:185",
            "nodes": [],
            "documentation": {
              "id": 67133,
              "nodeType": "StructuredDocumentation",
              "src": "3384:78:185",
              "text": "@notice Snapshots the rewards for the current round. Anyone can call this."
            },
            "functionSelector": "b3d3d37e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "takeSnapshot",
            "nameLocation": "3474:12:185",
            "parameters": {
              "id": 67134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:2:185"
            },
            "returnParameters": {
              "id": 67135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3497:0:185"
            },
            "scope": 67270,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67142,
            "nodeType": "FunctionDefinition",
            "src": "3669:41:185",
            "nodes": [],
            "documentation": {
              "id": 67137,
              "nodeType": "StructuredDocumentation",
              "src": "3502:164:185",
              "text": "@notice Stake $RARE tokens to the target associated with the contract and receive synthetic tokens in return.\n @param _amount Amount of $RARE being staked."
            },
            "functionSelector": "9ca92dec",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "3678:5:185",
            "parameters": {
              "id": 67140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67139,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3692:7:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67142,
                  "src": "3684:15:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 67138,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "3684:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3683:17:185"
            },
            "returnParameters": {
              "id": 67141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3709:0:185"
            },
            "scope": 67270,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67148,
            "nodeType": "FunctionDefinition",
            "src": "3875:43:185",
            "nodes": [],
            "documentation": {
              "id": 67143,
              "nodeType": "StructuredDocumentation",
              "src": "3714:158:185",
              "text": "@notice Unstake by returning synthetic tokens and receiving previously staked $RARE in return.\n @param _amount Amount of synthetic tokens to unstake."
            },
            "functionSelector": "2e17de78",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "3884:7:185",
            "parameters": {
              "id": 67146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67145,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3900:7:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67148,
                  "src": "3892:15:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3892:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3891:17:185"
            },
            "returnParameters": {
              "id": 67147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3917:0:185"
            },
            "scope": 67270,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67156,
            "nodeType": "FunctionDefinition",
            "src": "4347:64:185",
            "nodes": [],
            "documentation": {
              "id": 67149,
              "nodeType": "StructuredDocumentation",
              "src": "3922:422:185",
              "text": "@notice Claim rewards for the _user for the number of rounds supplied since last claim. Rewards are proportional to the synthetic tokens held during the snapshot associated with each round. Throws if user has already claimed the latest round. Throws if current round is being claimed.\n @param _user Address of user to claim on behalf of.\n @param _numRounds uint256 number of rounds to claim since last claim."
            },
            "functionSelector": "b5fc2f85",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "4356:12:185",
            "parameters": {
              "id": 67154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67151,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4377:5:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67156,
                  "src": "4369:13:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4369:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67153,
                  "mutability": "mutable",
                  "name": "_numRounds",
                  "nameLocation": "4390:10:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67156,
                  "src": "4384:16:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 67152,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:5:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4368:33:185"
            },
            "returnParameters": {
              "id": 67155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4410:0:185"
            },
            "scope": 67270,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67164,
            "nodeType": "FunctionDefinition",
            "src": "4786:78:185",
            "nodes": [],
            "documentation": {
              "id": 67157,
              "nodeType": "StructuredDocumentation",
              "src": "4624:159:185",
              "text": "@notice Query total amount of $RARE a user has staked on this contract.\n @param _user Address of staker.\n @return uint256 Amount of $RARE staked."
            },
            "functionSelector": "399d99ec",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountStakedByUser",
            "nameLocation": "4795:21:185",
            "parameters": {
              "id": 67160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67159,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4825:5:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67164,
                  "src": "4817:13:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4817:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4816:15:185"
            },
            "returnParameters": {
              "id": 67163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67164,
                  "src": "4855:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4855:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4854:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67170,
            "nodeType": "FunctionDefinition",
            "src": "4984:59:185",
            "nodes": [],
            "documentation": {
              "id": 67165,
              "nodeType": "StructuredDocumentation",
              "src": "4868:113:185",
              "text": "@notice Query current round. The current round is accumulating rewards.\n @return uint256 Claim round id."
            },
            "functionSelector": "a32bf597",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentRound",
            "nameLocation": "4993:15:185",
            "parameters": {
              "id": 67166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5008:2:185"
            },
            "returnParameters": {
              "id": 67169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67170,
                  "src": "5034:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5034:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5033:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67176,
            "nodeType": "FunctionDefinition",
            "src": "5133:54:185",
            "nodes": [],
            "documentation": {
              "id": 67171,
              "nodeType": "StructuredDocumentation",
              "src": "5047:83:185",
              "text": "@notice Name of the synthetic asset.\n @return Name of the synthetic asset."
            },
            "functionSelector": "06fdde03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "5142:4:185",
            "parameters": {
              "id": 67172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5146:2:185"
            },
            "returnParameters": {
              "id": 67175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67176,
                  "src": "5172:13:185",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5172:6:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5171:15:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67182,
            "nodeType": "FunctionDefinition",
            "src": "5281:56:185",
            "nodes": [],
            "documentation": {
              "id": 67177,
              "nodeType": "StructuredDocumentation",
              "src": "5191:87:185",
              "text": "@notice Symbol of the synthetic asset.\n @return Symbol of the synthetic asset."
            },
            "functionSelector": "95d89b41",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "5290:6:185",
            "parameters": {
              "id": 67178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5296:2:185"
            },
            "returnParameters": {
              "id": 67181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67182,
                  "src": "5322:13:185",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5322:6:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5321:15:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67188,
            "nodeType": "FunctionDefinition",
            "src": "5455:66:185",
            "nodes": [],
            "documentation": {
              "id": 67183,
              "nodeType": "StructuredDocumentation",
              "src": "5341:111:185",
              "text": "@notice Query the target being staked on by this contract.\n @return Address of target being staked on;"
            },
            "functionSelector": "3b248c76",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTargetBeingStakedOn",
            "nameLocation": "5464:22:185",
            "parameters": {
              "id": 67184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5486:2:185"
            },
            "returnParameters": {
              "id": 67187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67188,
                  "src": "5512:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67185,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5512:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5511:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67196,
            "nodeType": "FunctionDefinition",
            "src": "5664:73:185",
            "nodes": [],
            "documentation": {
              "id": 67189,
              "nodeType": "StructuredDocumentation",
              "src": "5525:136:185",
              "text": "@notice Total rewards available for the supplied round.\n @return uint256 Amount of $RARE tokens allocated as rewards for round."
            },
            "functionSelector": "91e2057e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoundRewards",
            "nameLocation": "5673:15:185",
            "parameters": {
              "id": 67192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67191,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "5697:6:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67196,
                  "src": "5689:14:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5689:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5688:16:185"
            },
            "returnParameters": {
              "id": 67195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67196,
                  "src": "5728:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5728:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5727:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67207,
            "nodeType": "FunctionDefinition",
            "src": "6114:131:185",
            "nodes": [],
            "documentation": {
              "id": 67197,
              "nodeType": "StructuredDocumentation",
              "src": "5741:370:185",
              "text": "@notice Query rewards for the supplied user address for the round supplied rounds. Does not omit rewards for rounds that have already been claimed. Allows for easier historical lookups.\n @param _user Address of the user to get rewards.\n @param _rounds List of uint256 round ids to look up the rewards.\n @return uint256 Amount of $RARE tokens rewarded."
            },
            "functionSelector": "cae06944",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getHistoricalRewardsForUserForRounds",
            "nameLocation": "6123:36:185",
            "parameters": {
              "id": 67203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67199,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6168:5:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67207,
                  "src": "6160:13:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6160:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67202,
                  "mutability": "mutable",
                  "name": "_rounds",
                  "nameLocation": "6192:7:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67207,
                  "src": "6175:24:185",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67200,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6175:7:185",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 67201,
                    "nodeType": "ArrayTypeName",
                    "src": "6175:9:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6159:41:185"
            },
            "returnParameters": {
              "id": 67206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67207,
                  "src": "6236:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6236:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6235:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67217,
            "nodeType": "FunctionDefinition",
            "src": "6536:103:185",
            "nodes": [],
            "documentation": {
              "id": 67208,
              "nodeType": "StructuredDocumentation",
              "src": "6249:284:185",
              "text": "@notice Query the available rewards for claim of the supplied user address for the number of rounds supplied. \n @param _user Address of the user to get rewards.\n @param _numRounds Address of the user to get rewards.\n @return uint256 Amount of $RARE tokens rewarded."
            },
            "functionSelector": "636f5b27",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableRewardsForUser",
            "nameLocation": "6545:26:185",
            "parameters": {
              "id": 67213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67210,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6580:5:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67217,
                  "src": "6572:13:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6572:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67212,
                  "mutability": "mutable",
                  "name": "_numRounds",
                  "nameLocation": "6595:10:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67217,
                  "src": "6587:18:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6587:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6571:35:185"
            },
            "returnParameters": {
              "id": 67216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67217,
                  "src": "6630:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6630:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6629:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67227,
            "nodeType": "FunctionDefinition",
            "src": "6945:109:185",
            "nodes": [],
            "documentation": {
              "id": 67218,
              "nodeType": "StructuredDocumentation",
              "src": "6643:299:185",
              "text": "@notice Calculates the number of sRare yielded from staking.\n @param _totalSRare Current supply of sRare.\n @param _stakedAmount Amount of RARE being staked.\n @return uint256 Amount of synthetic tokens one would get for staking {_stakedAmount} given a totalSupply of {_totalSRare}."
            },
            "functionSelector": "d775a4c7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchaseReturn",
            "nameLocation": "6954:23:185",
            "parameters": {
              "id": 67223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67220,
                  "mutability": "mutable",
                  "name": "_totalSRare",
                  "nameLocation": "6986:11:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67227,
                  "src": "6978:19:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 67219,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "6978:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67222,
                  "mutability": "mutable",
                  "name": "_stakedAmount",
                  "nameLocation": "7007:13:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67227,
                  "src": "6999:21:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 67221,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "6999:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6977:44:185"
            },
            "returnParameters": {
              "id": 67226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67227,
                  "src": "7045:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7045:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7044:9:185"
            },
            "scope": 67270,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67239,
            "nodeType": "FunctionDefinition",
            "src": "7496:160:185",
            "nodes": [],
            "documentation": {
              "id": 67228,
              "nodeType": "StructuredDocumentation",
              "src": "7058:435:185",
              "text": "@notice Calculates the number of rare yielded from unstaking.\n @param _totalSRareByUser Current balance of sRARE held by the given user.\n @param _totalRareStakedByUser Total Amount of RARE staked by the given user.\n @param _unstakeAmount Amount of sRare being traded in.\n @return uint256 Amount of $RARE tokens one would get for unstaking {_unstakeAmount} given {_totalSRareByUser} and {_totalRareStakedByUser}."
            },
            "functionSelector": "74293bf8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSaleReturn",
            "nameLocation": "7505:19:185",
            "parameters": {
              "id": 67235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67230,
                  "mutability": "mutable",
                  "name": "_totalSRareByUser",
                  "nameLocation": "7538:17:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67239,
                  "src": "7530:25:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7530:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67232,
                  "mutability": "mutable",
                  "name": "_totalRareStakedByUser",
                  "nameLocation": "7569:22:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67239,
                  "src": "7561:30:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7561:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67234,
                  "mutability": "mutable",
                  "name": "_unstakeAmount",
                  "nameLocation": "7605:14:185",
                  "nodeType": "VariableDeclaration",
                  "scope": 67239,
                  "src": "7597:22:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7597:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7524:99:185"
            },
            "returnParameters": {
              "id": 67238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67239,
                  "src": "7647:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7647:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7646:9:185"
            },
            "scope": 67270,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67245,
            "nodeType": "FunctionDefinition",
            "src": "7778:61:185",
            "nodes": [],
            "documentation": {
              "id": 67240,
              "nodeType": "StructuredDocumentation",
              "src": "7660:115:185",
              "text": "@notice Total rewards snapshotted since con.\n @return uint256 Amount of $RARE tokens allocated as rewards."
            },
            "functionSelector": "94616420",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTimeRewards",
            "nameLocation": "7787:17:185",
            "parameters": {
              "id": 67241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7804:2:185"
            },
            "returnParameters": {
              "id": 67244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67243,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67245,
                  "src": "7830:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7830:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7829:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67251,
            "nodeType": "FunctionDefinition",
            "src": "7967:59:185",
            "nodes": [],
            "documentation": {
              "id": 67246,
              "nodeType": "StructuredDocumentation",
              "src": "7843:121:185",
              "text": "@notice Get the unix creation time of the staking contract.\n @return uint256 unix creation time of the contract."
            },
            "functionSelector": "e6519a35",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCreationTime",
            "nameLocation": "7976:15:185",
            "parameters": {
              "id": 67247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7991:2:185"
            },
            "returnParameters": {
              "id": 67250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67251,
                  "src": "8017:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8017:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8016:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67257,
            "nodeType": "FunctionDefinition",
            "src": "8152:68:185",
            "nodes": [],
            "documentation": {
              "id": 67252,
              "nodeType": "StructuredDocumentation",
              "src": "8030:119:185",
              "text": "@notice Get the unix time of the most recent snapshot.\n @return uint256 unix time of the most recent snapshot."
            },
            "functionSelector": "7c27ff86",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLastSnapshotTimestamp",
            "nameLocation": "8161:24:185",
            "parameters": {
              "id": 67253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8185:2:185"
            },
            "returnParameters": {
              "id": 67256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67257,
                  "src": "8211:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8211:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8210:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67263,
            "nodeType": "FunctionDefinition",
            "src": "8320:62:185",
            "nodes": [],
            "documentation": {
              "id": 67258,
              "nodeType": "StructuredDocumentation",
              "src": "8224:93:185",
              "text": "@notice Total amount of Rewards claimed.\n @return uint256 amount of rewards claimed."
            },
            "functionSelector": "3b1c612e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSumOfAllClaimed",
            "nameLocation": "8329:18:185",
            "parameters": {
              "id": 67259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8347:2:185"
            },
            "returnParameters": {
              "id": 67262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67263,
                  "src": "8373:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8373:7:185",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8372:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67269,
            "nodeType": "FunctionDefinition",
            "src": "8487:62:185",
            "nodes": [],
            "documentation": {
              "id": 67264,
              "nodeType": "StructuredDocumentation",
              "src": "8386:98:185",
              "text": "@notice Return the staking registry of the pool\n @return address of the staking registry."
            },
            "functionSelector": "61347782",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingRegistry",
            "nameLocation": "8496:18:185",
            "parameters": {
              "id": 67265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8514:2:185"
            },
            "returnParameters": {
              "id": 67268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67269,
                  "src": "8540:7:185",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8540:7:185",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8539:9:185"
            },
            "scope": 67270,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 67037,
              "name": "IERC20Upgradeable",
              "nameLocations": ["344:17:185"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32746,
              "src": "344:17:185"
            },
            "id": 67038,
            "nodeType": "InheritanceSpecifier",
            "src": "344:17:185"
          }
        ],
        "canonicalName": "IRarityPool",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 67036,
          "nodeType": "StructuredDocumentation",
          "src": "161:158:185",
          "text": "@author koloz, charlescrain\n @title IRarityPool\n @notice The Rare Staking Pool ERC20 (Rarity Pool) interface containing all functions, events, etc."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [67270, 32746],
        "name": "IRarityPool",
        "nameLocation": "329:11:185",
        "scope": 67271,
        "usedErrors": [
          67091, 67094, 67097, 67100, 67103, 67106, 67109, 67112, 67115
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 185
}
