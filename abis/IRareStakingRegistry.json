{
  "abi": [
    {
      "type": "function",
      "name": "ENS_SETTER_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "STAKING_CONFIG_SETTER_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "STAKING_INFO_SETTER_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "STAKING_STAT_SETTER_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "SWAP_POOL_SETTER_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decreaseAmountStaked",
      "inputs": [
        { "name": "_staker", "type": "address", "internalType": "address" },
        { "name": "_stakedOn", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getDefaultPayee",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDeflationaryPercentage",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDiscountPercentage",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPeriodLength",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRareAddress",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRewardAccumulatorAddressForUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingAddressForUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingInfoForUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IRareStakingRegistry.Info",
          "components": [
            { "name": "name", "type": "string", "internalType": "string" },
            { "name": "symbol", "type": "string", "internalType": "string" },
            {
              "name": "stakingAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "rewardAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSwapPool",
      "inputs": [
        { "name": "_token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalAmountStakedByUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalAmountStakedOnUser",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUsersForStakingAddresses",
      "inputs": [
        {
          "name": "_stakingAddrs",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        { "name": "", "type": "address[]", "internalType": "address[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWethAddress",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "increaseAmountStaked",
      "inputs": [
        { "name": "_staker", "type": "address", "internalType": "address" },
        { "name": "_stakedOn", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDefaultPayee",
      "inputs": [
        { "name": "_payee", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDeflationaryPercentage",
      "inputs": [
        { "name": "_percentage", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDiscountPercentage",
      "inputs": [
        { "name": "_percentage", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setPeriodLength",
      "inputs": [
        {
          "name": "_periodLength",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setResolver",
      "inputs": [
        { "name": "_resolver", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setReverseRegistrar",
      "inputs": [
        {
          "name": "_reverseRegistrar",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setStakingAddresses",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" },
        {
          "name": "_stakingAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_rewardSwapAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setSwapPool",
      "inputs": [
        {
          "name": "_uniswapPool",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_token", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferRareFrom",
      "inputs": [
        { "name": "_from", "type": "address", "internalType": "address" },
        { "name": "_to", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "DefaultPayeeUpdated",
      "inputs": [
        {
          "name": "_payee",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DeflationaryPercentageUpdated",
      "inputs": [
        {
          "name": "_percentage",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DiscountPercentageUpdated",
      "inputs": [
        {
          "name": "_percentage",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PeriodLengthUpdated",
      "inputs": [
        {
          "name": "_periodLength",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ResolverUpdated",
      "inputs": [
        {
          "name": "_resolver",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ReverseRegistrarUpdated",
      "inputs": [
        {
          "name": "_percentage",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetSwapPool",
      "inputs": [
        {
          "name": "_uniswapPool",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "_token",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "InsufficientRareAllowance", "inputs": [] },
    { "type": "error", "name": "InvalidPool", "inputs": [] },
    { "type": "error", "name": "PercentageBeyondLimit", "inputs": [] },
    { "type": "error", "name": "PeriodLengthBeyondLimit", "inputs": [] },
    { "type": "error", "name": "RenouncingAdmin", "inputs": [] },
    { "type": "error", "name": "StakingContractAlreadyExists", "inputs": [] },
    { "type": "error", "name": "Unauthorized", "inputs": [] },
    { "type": "error", "name": "ZeroAddressUnsupported", "inputs": [] }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "ENS_SETTER_ROLE()": "c2544987",
    "STAKING_CONFIG_SETTER_ROLE()": "a4303a45",
    "STAKING_INFO_SETTER_ROLE()": "265718b4",
    "STAKING_STAT_SETTER_ADMIN_ROLE()": "29b4a590",
    "STAKING_STAT_SETTER_ROLE()": "66951bc1",
    "SWAP_POOL_SETTER_ROLE()": "363227e5",
    "decreaseAmountStaked(address,address,uint256)": "cac7c65c",
    "getDefaultPayee()": "10da95e6",
    "getDeflationaryPercentage()": "f7ef8ead",
    "getDiscountPercentage()": "111029b9",
    "getPeriodLength()": "8469ddc7",
    "getRareAddress()": "2210d525",
    "getRewardAccumulatorAddressForUser(address)": "e286ef33",
    "getStakingAddressForUser(address)": "81d0606b",
    "getStakingInfoForUser(address)": "f24bd8a6",
    "getSwapPool(address)": "039bcf8e",
    "getTotalAmountStakedByUser(address)": "06c571d5",
    "getTotalAmountStakedOnUser(address)": "3d867d95",
    "getUsersForStakingAddresses(address[])": "18ab58ac",
    "getWethAddress()": "23a7b42a",
    "increaseAmountStaked(address,address,uint256)": "2608ff35",
    "setDefaultPayee(address)": "99247be7",
    "setDeflationaryPercentage(uint256)": "cb8af2b5",
    "setDiscountPercentage(uint256)": "b3428d15",
    "setPeriodLength(uint256)": "1c5633d7",
    "setResolver(address)": "4e543b26",
    "setReverseRegistrar(address)": "557499ba",
    "setStakingAddresses(address,address,address)": "76a250a7",
    "setSwapPool(address,address)": "46ccbb40",
    "transferRareFrom(address,address,uint256)": "81910e33"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientRareAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PeriodLengthBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncingAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakingContractAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"DefaultPayeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DeflationaryPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DiscountPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"PeriodLengthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"ResolverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_percentage\",\"type\":\"address\"}],\"name\":\"ReverseRegistrarUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetSwapPool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENS_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_CONFIG_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_INFO_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_POOL_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultPayee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeflationaryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDiscountPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPeriodLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardAccumulatorAddressForUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingAddressForUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingInfoForUser\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct IRareStakingRegistry.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getSwapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedOnUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_stakingAddrs\",\"type\":\"address[]\"}],\"name\":\"getUsersForStakingAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"setDefaultPayee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDeflationaryPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDiscountPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"setPeriodLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverseRegistrar\",\"type\":\"address\"}],\"name\":\"setReverseRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSwapAddress\",\"type\":\"address\"}],\"name\":\"setStakingAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setSwapPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferRareFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"kind\":\"dev\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the ens setter role.\"}},\"STAKING_CONFIG_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking config setter role.\"}},\"STAKING_INFO_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking info setter role.\"}},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking stat setter admin role.\"}},\"STAKING_STAT_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the stat setter role.\"}},\"SWAP_POOL_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the swap pool setter role.\"}},\"decreaseAmountStaked(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of $RARE that has been unstaked.\",\"_stakedOn\":\"The user who was being staked on.\",\"_staker\":\"The user who is unstaking.\"}},\"getDefaultPayee()\":{\"returns\":{\"_0\":\"address to send rewards to.\"}},\"getDeflationaryPercentage()\":{\"returns\":{\"_0\":\"uint256 deflationary percentage.\"}},\"getDiscountPercentage()\":{\"returns\":{\"_0\":\"uint256  discount percentage.\"}},\"getPeriodLength()\":{\"returns\":{\"_0\":\"uint256 period length.\"}},\"getRareAddress()\":{\"returns\":{\"_0\":\"address Address of $RARE (the staking token to be used).\"}},\"getRewardAccumulatorAddressForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"address Reward accumulator address.\"}},\"getStakingAddressForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"address staking address.\"}},\"getStakingInfoForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"Info struct containing name, symbol, staking address, and reward accumulator address.\"}},\"getSwapPool(address)\":{\"returns\":{\"_0\":\"address of the swap pool associated with the token.\"}},\"getTotalAmountStakedByUser(address)\":{\"params\":{\"_user\":\"Address of the user staking.\"},\"returns\":{\"_0\":\"uint256 Amount of rare the user is staking.\"}},\"getTotalAmountStakedOnUser(address)\":{\"params\":{\"_user\":\"Address of the user being staked on.\"},\"returns\":{\"_0\":\"uint256 Amount of rare being staked on the user.\"}},\"getUsersForStakingAddresses(address[])\":{\"params\":{\"_stakingAddrs\":\"Addresses of staking contracts being queried.\"}},\"getWethAddress()\":{\"returns\":{\"_0\":\"address Address of Wrapped Ethereum.\"}},\"increaseAmountStaked(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of $RARE that has been staked.\",\"_stakedOn\":\"The user who is being staked on.\",\"_staker\":\"The user who is staking.\"}},\"setDefaultPayee(address)\":{\"params\":{\"_payee\":\"Address of the account to be the new default payee.\"}},\"setDeflationaryPercentage(uint256)\":{\"params\":{\"_percentage\":\"The new deflactionary percentage.\"}},\"setDiscountPercentage(uint256)\":{\"params\":{\"_percentage\":\"The new discount percentage.\"}},\"setPeriodLength(uint256)\":{\"params\":{\"_periodLength\":\"The new period start.\"}},\"setResolver(address)\":{\"params\":{\"_resolver\":\"The new period start.\"}},\"setReverseRegistrar(address)\":{\"params\":{\"_reverseRegistrar\":\"The new period start.\"}},\"setStakingAddresses(address,address,address)\":{\"params\":{\"_rewardSwapAddress\":\"Address of the reward swap contract.\",\"_stakingAddress\":\"Address of the staking pool contract.\",\"_user\":\"Address of the target whose staking address is being set.\"}},\"setSwapPool(address,address)\":{\"params\":{\"_token\":\"Address of  ERC20 contract.\",\"_uniswapPool\":\"Address of  uniswap pool.\"}},\"transferRareFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"uint256 amount to transfer.\",\"_from\":\"Address to transfer the tokens from.\",\"_to\":\"Address to transfer the tokens to.\"}}},\"title\":\"IRareStakingRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientRareAllowance()\":[{\"notice\":\"Error emitted in {transferRareFrom} when a user performs an action that requires moving $RARE but has not made enough allowance for the registry.\"}],\"InvalidPool()\":[{\"notice\":\"Emitted via {setSwapPool} if the pool doesn't match the token and pairs with WETH.\"}],\"PercentageBeyondLimit()\":[{\"notice\":\"Emitted when a percentage is beyond the specified limit.\"}],\"PeriodLengthBeyondLimit()\":[{\"notice\":\"Emitted when a Period Length is beyond the specified limit.\"}],\"RenouncingAdmin()\":[{\"notice\":\"Emitted when renouncing the admin role and no other account has the role.\"}],\"StakingContractAlreadyExists()\":[{\"notice\":\"Emitted via {setStakingAddress} if the user already has a staking address.\"}],\"Unauthorized()\":[{\"notice\":\"Emitted when guarded functions are called by users without the necessary permissions.\"}],\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"events\":{\"DefaultPayeeUpdated(address)\":{\"notice\":\"Emitted via {setDefaultPayee} when the defaultPayee is updated.\"},\"DeflationaryPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDeflationaryPercentage} when the deflationaryPercentage is updated.\"},\"DiscountPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDiscountPercentage} when the discountedPercent is updated.\"},\"PeriodLengthUpdated(uint256)\":{\"notice\":\"Emitted via {setPeriodLength} when the periodLength is updated.\"},\"ResolverUpdated(address)\":{\"notice\":\"Emitted via {setResolver} when the ENS resolver is updated.\"},\"ReverseRegistrarUpdated(address)\":{\"notice\":\"Emitted via {setReverseRegistrar} when the ENS reverse registrar is updated.\"},\"SetSwapPool(address,address)\":{\"notice\":\"Emitted via {setSwapPool} when a new swap pool has been set.\"}},\"kind\":\"user\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the ENS resolvers.\"},\"STAKING_CONFIG_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for period length, deflationary percentages, and the default payee.\"},\"STAKING_INFO_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for setting the staking address of a user.\"},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"notice\":\"Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user.\"},\"STAKING_STAT_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally.\"},\"SWAP_POOL_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating uniswap pools.\"},\"decreaseAmountStaked(address,address,uint256)\":{\"notice\":\"Decrease the amount staked when a user unstakes.\"},\"getDefaultPayee()\":{\"notice\":\"Get the address for sending rewards if there are no stakers.\"},\"getDeflationaryPercentage()\":{\"notice\":\"Get the unstake deflationary percentage.\"},\"getDiscountPercentage()\":{\"notice\":\"Get reward swap discount percentage.\"},\"getPeriodLength()\":{\"notice\":\"Get the round period length.\"},\"getRareAddress()\":{\"notice\":\"Retrieve the address of $RARE.\"},\"getRewardAccumulatorAddressForUser(address)\":{\"notice\":\"Retrieves the reward accumulator address for a given user.\"},\"getStakingAddressForUser(address)\":{\"notice\":\"Retrieves the staking address for a given user.\"},\"getStakingInfoForUser(address)\":{\"notice\":\"Retrieves the staking info for a given user.\"},\"getSwapPool(address)\":{\"notice\":\"Get the swap pool address for the ERC20 token.\"},\"getTotalAmountStakedByUser(address)\":{\"notice\":\"Retrieves the total amount of rare staked by a given user.\"},\"getTotalAmountStakedOnUser(address)\":{\"notice\":\"Retrieves the total amount of rare being staked on a given user.\"},\"getUsersForStakingAddresses(address[])\":{\"notice\":\"Query the users for the following staking addresseses.\"},\"getWethAddress()\":{\"notice\":\"Retrieve the address of Wrapped Ethereum.\"},\"increaseAmountStaked(address,address,uint256)\":{\"notice\":\"Increase amount staked when a user stakes.\"},\"setDefaultPayee(address)\":{\"notice\":\"Set the default payee.\"},\"setDeflationaryPercentage(uint256)\":{\"notice\":\"Set the unstake deflationary percentage.\"},\"setDiscountPercentage(uint256)\":{\"notice\":\"Set the reward swap discount percentage.\"},\"setPeriodLength(uint256)\":{\"notice\":\"Set the round period length time.\"},\"setResolver(address)\":{\"notice\":\"Set the ENS resolver address.\"},\"setReverseRegistrar(address)\":{\"notice\":\"Set the ENS reverse registrar address.\"},\"setStakingAddresses(address,address,address)\":{\"notice\":\"Set staking addresses for a target.\"},\"setSwapPool(address,address)\":{\"notice\":\"Set the uniswap pool address for the given ERC20 token.\"},\"transferRareFrom(address,address,uint256)\":{\"notice\":\"Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps.\"}},\"notice\":\"The Staking Registry interface containing all functions, events, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/registry/IRareStakingRegistry.sol\":\"IRareStakingRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6\",\"dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.18+commit.87f61d96" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "type": "error", "name": "InsufficientRareAllowance" },
        { "inputs": [], "type": "error", "name": "InvalidPool" },
        { "inputs": [], "type": "error", "name": "PercentageBeyondLimit" },
        { "inputs": [], "type": "error", "name": "PeriodLengthBeyondLimit" },
        { "inputs": [], "type": "error", "name": "RenouncingAdmin" },
        {
          "inputs": [],
          "type": "error",
          "name": "StakingContractAlreadyExists"
        },
        { "inputs": [], "type": "error", "name": "Unauthorized" },
        { "inputs": [], "type": "error", "name": "ZeroAddressUnsupported" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payee",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultPayeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeflationaryPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiscountPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PeriodLengthUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ResolverUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_percentage",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReverseRegistrarUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_uniswapPool",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetSwapPool",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENS_SETTER_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_CONFIG_SETTER_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_INFO_SETTER_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_STAT_SETTER_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SWAP_POOL_SETTER_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_staker", "type": "address" },
            {
              "internalType": "address",
              "name": "_stakedOn",
              "type": "address"
            },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAmountStaked"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultPayee",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeflationaryPercentage",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDiscountPercentage",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPeriodLength",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRareAddress",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardAccumulatorAddressForUser",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingAddressForUser",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingInfoForUser",
          "outputs": [
            {
              "internalType": "struct IRareStakingRegistry.Info",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "string", "name": "name", "type": "string" },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "stakingAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapPool",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAmountStakedByUser",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAmountStakedOnUser",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_stakingAddrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUsersForStakingAddresses",
          "outputs": [
            { "internalType": "address[]", "name": "", "type": "address[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWethAddress",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_staker", "type": "address" },
            {
              "internalType": "address",
              "name": "_stakedOn",
              "type": "address"
            },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAmountStaked"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_payee", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultPayee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDeflationaryPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDiscountPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPeriodLength"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setResolver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_reverseRegistrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReverseRegistrar"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" },
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardSwapAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakingAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_uniswapPool",
              "type": "address"
            },
            { "internalType": "address", "name": "_token", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapPool"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_from", "type": "address" },
            { "internalType": "address", "name": "_to", "type": "address" },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferRareFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ENS_SETTER_ROLE()": {
            "returns": { "_0": "bytes32 value of the ens setter role." }
          },
          "STAKING_CONFIG_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking config setter role."
            }
          },
          "STAKING_INFO_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking info setter role."
            }
          },
          "STAKING_STAT_SETTER_ADMIN_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking stat setter admin role."
            }
          },
          "STAKING_STAT_SETTER_ROLE()": {
            "returns": { "_0": "bytes32 value of the stat setter role." }
          },
          "SWAP_POOL_SETTER_ROLE()": {
            "returns": { "_0": "bytes32 value of the swap pool setter role." }
          },
          "decreaseAmountStaked(address,address,uint256)": {
            "params": {
              "_amount": "The amount of $RARE that has been unstaked.",
              "_stakedOn": "The user who was being staked on.",
              "_staker": "The user who is unstaking."
            }
          },
          "getDefaultPayee()": {
            "returns": { "_0": "address to send rewards to." }
          },
          "getDeflationaryPercentage()": {
            "returns": { "_0": "uint256 deflationary percentage." }
          },
          "getDiscountPercentage()": {
            "returns": { "_0": "uint256  discount percentage." }
          },
          "getPeriodLength()": {
            "returns": { "_0": "uint256 period length." }
          },
          "getRareAddress()": {
            "returns": {
              "_0": "address Address of $RARE (the staking token to be used)."
            }
          },
          "getRewardAccumulatorAddressForUser(address)": {
            "params": { "_user": "Address of user being queried." },
            "returns": { "_0": "address Reward accumulator address." }
          },
          "getStakingAddressForUser(address)": {
            "params": { "_user": "Address of user being queried." },
            "returns": { "_0": "address staking address." }
          },
          "getStakingInfoForUser(address)": {
            "params": { "_user": "Address of user being queried." },
            "returns": {
              "_0": "Info struct containing name, symbol, staking address, and reward accumulator address."
            }
          },
          "getSwapPool(address)": {
            "returns": {
              "_0": "address of the swap pool associated with the token."
            }
          },
          "getTotalAmountStakedByUser(address)": {
            "params": { "_user": "Address of the user staking." },
            "returns": { "_0": "uint256 Amount of rare the user is staking." }
          },
          "getTotalAmountStakedOnUser(address)": {
            "params": { "_user": "Address of the user being staked on." },
            "returns": {
              "_0": "uint256 Amount of rare being staked on the user."
            }
          },
          "getUsersForStakingAddresses(address[])": {
            "params": {
              "_stakingAddrs": "Addresses of staking contracts being queried."
            }
          },
          "getWethAddress()": {
            "returns": { "_0": "address Address of Wrapped Ethereum." }
          },
          "increaseAmountStaked(address,address,uint256)": {
            "params": {
              "_amount": "The amount of $RARE that has been staked.",
              "_stakedOn": "The user who is being staked on.",
              "_staker": "The user who is staking."
            }
          },
          "setDefaultPayee(address)": {
            "params": {
              "_payee": "Address of the account to be the new default payee."
            }
          },
          "setDeflationaryPercentage(uint256)": {
            "params": { "_percentage": "The new deflactionary percentage." }
          },
          "setDiscountPercentage(uint256)": {
            "params": { "_percentage": "The new discount percentage." }
          },
          "setPeriodLength(uint256)": {
            "params": { "_periodLength": "The new period start." }
          },
          "setResolver(address)": {
            "params": { "_resolver": "The new period start." }
          },
          "setReverseRegistrar(address)": {
            "params": { "_reverseRegistrar": "The new period start." }
          },
          "setStakingAddresses(address,address,address)": {
            "params": {
              "_rewardSwapAddress": "Address of the reward swap contract.",
              "_stakingAddress": "Address of the staking pool contract.",
              "_user": "Address of the target whose staking address is being set."
            }
          },
          "setSwapPool(address,address)": {
            "params": {
              "_token": "Address of  ERC20 contract.",
              "_uniswapPool": "Address of  uniswap pool."
            }
          },
          "transferRareFrom(address,address,uint256)": {
            "params": {
              "_amount": "uint256 amount to transfer.",
              "_from": "Address to transfer the tokens from.",
              "_to": "Address to transfer the tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ENS_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating the ENS resolvers."
          },
          "STAKING_CONFIG_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for period length, deflationary percentages, and the default payee."
          },
          "STAKING_INFO_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for setting the staking address of a user."
          },
          "STAKING_STAT_SETTER_ADMIN_ROLE()": {
            "notice": "Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user."
          },
          "STAKING_STAT_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally."
          },
          "SWAP_POOL_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating uniswap pools."
          },
          "decreaseAmountStaked(address,address,uint256)": {
            "notice": "Decrease the amount staked when a user unstakes."
          },
          "getDefaultPayee()": {
            "notice": "Get the address for sending rewards if there are no stakers."
          },
          "getDeflationaryPercentage()": {
            "notice": "Get the unstake deflationary percentage."
          },
          "getDiscountPercentage()": {
            "notice": "Get reward swap discount percentage."
          },
          "getPeriodLength()": { "notice": "Get the round period length." },
          "getRareAddress()": { "notice": "Retrieve the address of $RARE." },
          "getRewardAccumulatorAddressForUser(address)": {
            "notice": "Retrieves the reward accumulator address for a given user."
          },
          "getStakingAddressForUser(address)": {
            "notice": "Retrieves the staking address for a given user."
          },
          "getStakingInfoForUser(address)": {
            "notice": "Retrieves the staking info for a given user."
          },
          "getSwapPool(address)": {
            "notice": "Get the swap pool address for the ERC20 token."
          },
          "getTotalAmountStakedByUser(address)": {
            "notice": "Retrieves the total amount of rare staked by a given user."
          },
          "getTotalAmountStakedOnUser(address)": {
            "notice": "Retrieves the total amount of rare being staked on a given user."
          },
          "getUsersForStakingAddresses(address[])": {
            "notice": "Query the users for the following staking addresseses."
          },
          "getWethAddress()": {
            "notice": "Retrieve the address of Wrapped Ethereum."
          },
          "increaseAmountStaked(address,address,uint256)": {
            "notice": "Increase amount staked when a user stakes."
          },
          "setDefaultPayee(address)": { "notice": "Set the default payee." },
          "setDeflationaryPercentage(uint256)": {
            "notice": "Set the unstake deflationary percentage."
          },
          "setDiscountPercentage(uint256)": {
            "notice": "Set the reward swap discount percentage."
          },
          "setPeriodLength(uint256)": {
            "notice": "Set the round period length time."
          },
          "setResolver(address)": { "notice": "Set the ENS resolver address." },
          "setReverseRegistrar(address)": {
            "notice": "Set the ENS reverse registrar address."
          },
          "setStakingAddresses(address,address,address)": {
            "notice": "Set staking addresses for a target."
          },
          "setSwapPool(address,address)": {
            "notice": "Set the uniswap pool address for the given ERC20 token."
          },
          "transferRareFrom(address,address,uint256)": {
            "notice": "Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/buffer/=lib/buffer/",
        "@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        "arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        "ds-test/=lib/ds-test/src/",
        "ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "rareprotocol/assets/=lib/assets/src/",
        "rareprotocol/aux/=src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        "royalty-registry/=lib/royalty-registry-solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/staking/registry/IRareStakingRegistry.sol": "IRareStakingRegistry"
      },
      "evmVersion": "paris",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924",
        "urls": [
          "bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6",
          "dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
    "id": 65164,
    "exportedSymbols": { "IRareStakingRegistry": [65163] },
    "nodeType": "SourceUnit",
    "src": "32:10462:181",
    "nodes": [
      {
        "id": 64876,
        "nodeType": "PragmaDirective",
        "src": "32:23:181",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".0"]
      },
      {
        "id": 65163,
        "nodeType": "ContractDefinition",
        "src": "203:10290:181",
        "nodes": [
          {
            "id": 64886,
            "nodeType": "StructDefinition",
            "src": "601:108:181",
            "nodes": [],
            "canonicalName": "IRareStakingRegistry.Info",
            "members": [
              {
                "constant": false,
                "id": 64879,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "626:4:181",
                "nodeType": "VariableDeclaration",
                "scope": 64886,
                "src": "619:11:181",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 64878,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "619:6:181",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64881,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "643:6:181",
                "nodeType": "VariableDeclaration",
                "scope": 64886,
                "src": "636:13:181",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 64880,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:6:181",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64883,
                "mutability": "mutable",
                "name": "stakingAddress",
                "nameLocation": "663:14:181",
                "nodeType": "VariableDeclaration",
                "scope": 64886,
                "src": "655:22:181",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 64882,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "655:7:181",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64885,
                "mutability": "mutable",
                "name": "rewardAddress",
                "nameLocation": "691:13:181",
                "nodeType": "VariableDeclaration",
                "scope": 64886,
                "src": "683:21:181",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 64884,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "683:7:181",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "608:4:181",
            "scope": 65163,
            "visibility": "public"
          },
          {
            "id": 64891,
            "nodeType": "EventDefinition",
            "src": "987:42:181",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64887,
              "nodeType": "StructuredDocumentation",
              "src": "909:75:181",
              "text": "@notice Emitted via {setDefaultPayee} when the defaultPayee is updated."
            },
            "eventSelector": "a37a7d6d9546ebba206b7200fd6814cc4885bd05277f43db31703508086bac5b",
            "name": "DefaultPayeeUpdated",
            "nameLocation": "993:19:181",
            "parameters": {
              "id": 64890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64889,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nameLocation": "1021:6:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64891,
                  "src": "1013:14:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:16:181"
            }
          },
          {
            "id": 64896,
            "nodeType": "EventDefinition",
            "src": "1131:57:181",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64892,
              "nodeType": "StructuredDocumentation",
              "src": "1033:95:181",
              "text": "@notice Emitted via {setDeflationaryPercentage} when the deflationaryPercentage is updated."
            },
            "eventSelector": "392bc62c14254761a14ce86ad9820d13103f5f490089391c7ecf162afd5d68f9",
            "name": "DeflationaryPercentageUpdated",
            "nameLocation": "1137:29:181",
            "parameters": {
              "id": 64895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64894,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1175:11:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64896,
                  "src": "1167:19:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:21:181"
            }
          },
          {
            "id": 64901,
            "nodeType": "EventDefinition",
            "src": "1281:53:181",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64897,
              "nodeType": "StructuredDocumentation",
              "src": "1192:86:181",
              "text": "@notice Emitted via {setDiscountPercentage} when the discountedPercent is updated."
            },
            "eventSelector": "8edc85bde8568f5dc6d7febb4820920db680537ad498b90d003e63d93a3988a1",
            "name": "DiscountPercentageUpdated",
            "nameLocation": "1287:25:181",
            "parameters": {
              "id": 64900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64899,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1321:11:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64901,
                  "src": "1313:19:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1312:21:181"
            }
          },
          {
            "id": 64906,
            "nodeType": "EventDefinition",
            "src": "1416:49:181",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64902,
              "nodeType": "StructuredDocumentation",
              "src": "1338:75:181",
              "text": "@notice Emitted via {setPeriodLength} when the periodLength is updated."
            },
            "eventSelector": "439c9ef273bcbea625a0b7b93955ba4d4963bc26fdeaafe7dd6e674779464105",
            "name": "PeriodLengthUpdated",
            "nameLocation": "1422:19:181",
            "parameters": {
              "id": 64905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64904,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodLength",
                  "nameLocation": "1450:13:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64906,
                  "src": "1442:21:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1441:23:181"
            }
          },
          {
            "id": 64911,
            "nodeType": "EventDefinition",
            "src": "1560:51:181",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64907,
              "nodeType": "StructuredDocumentation",
              "src": "1469:88:181",
              "text": "@notice Emitted via {setReverseRegistrar} when the ENS reverse registrar is updated."
            },
            "eventSelector": "d192c0b229b00473ccb6ccfebf6642805bca1dcdf2d9fb4fd102c7dc7ea4ce23",
            "name": "ReverseRegistrarUpdated",
            "nameLocation": "1566:23:181",
            "parameters": {
              "id": 64910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64909,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1598:11:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64911,
                  "src": "1590:19:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1589:21:181"
            }
          },
          {
            "id": 64916,
            "nodeType": "EventDefinition",
            "src": "1689:41:181",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64912,
              "nodeType": "StructuredDocumentation",
              "src": "1615:71:181",
              "text": "@notice Emitted via {setResolver} when the ENS resolver is updated."
            },
            "eventSelector": "15cd6d20bba01b3fcb790c73829dd07412cbdf689ef818c96a2505889f3736a2",
            "name": "ResolverUpdated",
            "nameLocation": "1695:15:181",
            "parameters": {
              "id": 64915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64914,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_resolver",
                  "nameLocation": "1719:9:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64916,
                  "src": "1711:17:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1710:19:181"
            }
          },
          {
            "id": 64923,
            "nodeType": "EventDefinition",
            "src": "1809:56:181",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64917,
              "nodeType": "StructuredDocumentation",
              "src": "1734:72:181",
              "text": "@notice Emitted via {setSwapPool} when a new swap pool has been set."
            },
            "eventSelector": "90b58464d7ad372751038449eef244602d2be9c82abdab06596a7677272cd427",
            "name": "SetSwapPool",
            "nameLocation": "1815:11:181",
            "parameters": {
              "id": 64922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64919,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_uniswapPool",
                  "nameLocation": "1835:12:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64923,
                  "src": "1827:20:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1827:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64921,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1857:6:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64923,
                  "src": "1849:14:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1826:38:181"
            }
          },
          {
            "id": 64926,
            "nodeType": "ErrorDefinition",
            "src": "2170:21:181",
            "nodes": [],
            "documentation": {
              "id": 64924,
              "nodeType": "StructuredDocumentation",
              "src": "2070:97:181",
              "text": "@notice Emitted when guarded functions are called by users without the necessary permissions."
            },
            "errorSelector": "82b42900",
            "name": "Unauthorized",
            "nameLocation": "2176:12:181",
            "parameters": {
              "id": 64925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2188:2:181"
            }
          },
          {
            "id": 64929,
            "nodeType": "ErrorDefinition",
            "src": "2292:20:181",
            "nodes": [],
            "documentation": {
              "id": 64927,
              "nodeType": "StructuredDocumentation",
              "src": "2195:94:181",
              "text": "@notice Emitted via {setSwapPool} if the pool doesn't match the token and pairs with WETH."
            },
            "errorSelector": "2083cd40",
            "name": "InvalidPool",
            "nameLocation": "2298:11:181",
            "parameters": {
              "id": 64928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2309:2:181"
            }
          },
          {
            "id": 64932,
            "nodeType": "ErrorDefinition",
            "src": "2405:37:181",
            "nodes": [],
            "documentation": {
              "id": 64930,
              "nodeType": "StructuredDocumentation",
              "src": "2316:86:181",
              "text": "@notice Emitted via {setStakingAddress} if the user already has a staking address."
            },
            "errorSelector": "67d3e6b6",
            "name": "StakingContractAlreadyExists",
            "nameLocation": "2411:28:181",
            "parameters": {
              "id": 64931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:2:181"
            }
          },
          {
            "id": 64935,
            "nodeType": "ErrorDefinition",
            "src": "2520:31:181",
            "nodes": [],
            "documentation": {
              "id": 64933,
              "nodeType": "StructuredDocumentation",
              "src": "2446:71:181",
              "text": "@notice Emitted when Zero address provided where it is not allowed."
            },
            "errorSelector": "78279125",
            "name": "ZeroAddressUnsupported",
            "nameLocation": "2526:22:181",
            "parameters": {
              "id": 64934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2548:2:181"
            }
          },
          {
            "id": 64938,
            "nodeType": "ErrorDefinition",
            "src": "2715:34:181",
            "nodes": [],
            "documentation": {
              "id": 64936,
              "nodeType": "StructuredDocumentation",
              "src": "2555:157:181",
              "text": "@notice Error emitted in {transferRareFrom} when a user performs an action that requires moving $RARE but has not made enough allowance for the registry."
            },
            "errorSelector": "43439826",
            "name": "InsufficientRareAllowance",
            "nameLocation": "2721:25:181",
            "parameters": {
              "id": 64937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2746:2:181"
            }
          },
          {
            "id": 64941,
            "nodeType": "ErrorDefinition",
            "src": "2824:30:181",
            "nodes": [],
            "documentation": {
              "id": 64939,
              "nodeType": "StructuredDocumentation",
              "src": "2753:68:181",
              "text": "@notice Emitted when a percentage is beyond the specified limit."
            },
            "errorSelector": "cd34f162",
            "name": "PercentageBeyondLimit",
            "nameLocation": "2830:21:181",
            "parameters": {
              "id": 64940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2851:2:181"
            }
          },
          {
            "id": 64944,
            "nodeType": "ErrorDefinition",
            "src": "2932:32:181",
            "nodes": [],
            "documentation": {
              "id": 64942,
              "nodeType": "StructuredDocumentation",
              "src": "2858:71:181",
              "text": "@notice Emitted when a Period Length is beyond the specified limit."
            },
            "errorSelector": "cfc848e4",
            "name": "PeriodLengthBeyondLimit",
            "nameLocation": "2938:23:181",
            "parameters": {
              "id": 64943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2961:2:181"
            }
          },
          {
            "id": 64947,
            "nodeType": "ErrorDefinition",
            "src": "3056:24:181",
            "nodes": [],
            "documentation": {
              "id": 64945,
              "nodeType": "StructuredDocumentation",
              "src": "2968:85:181",
              "text": "@notice Emitted when renouncing the admin role and no other account has the role."
            },
            "errorSelector": "794e8478",
            "name": "RenouncingAdmin",
            "nameLocation": "3062:15:181",
            "parameters": {
              "id": 64946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3077:2:181"
            }
          },
          {
            "id": 64957,
            "nodeType": "FunctionDefinition",
            "src": "3516:108:181",
            "nodes": [],
            "documentation": {
              "id": 64948,
              "nodeType": "StructuredDocumentation",
              "src": "3294:219:181",
              "text": "@notice Increase amount staked when a user stakes.\n @param _staker The user who is staking.\n @param _stakedOn The user who is being staked on.\n @param _amount The amount of $RARE that has been staked."
            },
            "functionSelector": "2608ff35",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAmountStaked",
            "nameLocation": "3525:20:181",
            "parameters": {
              "id": 64955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64950,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3559:7:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64957,
                  "src": "3551:15:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64952,
                  "mutability": "mutable",
                  "name": "_stakedOn",
                  "nameLocation": "3580:9:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64957,
                  "src": "3572:17:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64954,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3603:7:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64957,
                  "src": "3595:15:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3545:69:181"
            },
            "returnParameters": {
              "id": 64956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3623:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64967,
            "nodeType": "FunctionDefinition",
            "src": "3861:108:181",
            "nodes": [],
            "documentation": {
              "id": 64958,
              "nodeType": "StructuredDocumentation",
              "src": "3628:230:181",
              "text": "@notice Decrease the amount staked when a user unstakes.\n @param _staker The user who is unstaking.\n @param _stakedOn The user who was being staked on.\n @param _amount The amount of $RARE that has been unstaked."
            },
            "functionSelector": "cac7c65c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAmountStaked",
            "nameLocation": "3870:20:181",
            "parameters": {
              "id": 64965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64960,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3904:7:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64967,
                  "src": "3896:15:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64962,
                  "mutability": "mutable",
                  "name": "_stakedOn",
                  "nameLocation": "3925:9:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64967,
                  "src": "3917:17:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3917:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64964,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3948:7:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64967,
                  "src": "3940:15:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3890:69:181"
            },
            "returnParameters": {
              "id": 64966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3968:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64977,
            "nodeType": "FunctionDefinition",
            "src": "4236:122:181",
            "nodes": [],
            "documentation": {
              "id": 64968,
              "nodeType": "StructuredDocumentation",
              "src": "3973:260:181",
              "text": "@notice Set staking addresses for a target.\n @param _user Address of the target whose staking address is being set.\n @param _stakingAddress Address of the staking pool contract.\n @param _rewardSwapAddress Address of the reward swap contract."
            },
            "functionSelector": "76a250a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingAddresses",
            "nameLocation": "4245:19:181",
            "parameters": {
              "id": 64975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64970,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4278:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64977,
                  "src": "4270:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4270:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64972,
                  "mutability": "mutable",
                  "name": "_stakingAddress",
                  "nameLocation": "4297:15:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64977,
                  "src": "4289:23:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4289:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64974,
                  "mutability": "mutable",
                  "name": "_rewardSwapAddress",
                  "nameLocation": "4326:18:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64977,
                  "src": "4318:26:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4264:84:181"
            },
            "returnParameters": {
              "id": 64976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4357:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64983,
            "nodeType": "FunctionDefinition",
            "src": "4471:50:181",
            "nodes": [],
            "documentation": {
              "id": 64978,
              "nodeType": "StructuredDocumentation",
              "src": "4362:106:181",
              "text": "@notice Set the default payee.\n @param _payee Address of the account to be the new default payee."
            },
            "functionSelector": "99247be7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDefaultPayee",
            "nameLocation": "4480:15:181",
            "parameters": {
              "id": 64981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64980,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nameLocation": "4504:6:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64983,
                  "src": "4496:14:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:16:181"
            },
            "returnParameters": {
              "id": 64982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4520:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64989,
            "nodeType": "FunctionDefinition",
            "src": "4634:61:181",
            "nodes": [],
            "documentation": {
              "id": 64984,
              "nodeType": "StructuredDocumentation",
              "src": "4525:106:181",
              "text": "@notice Set the reward swap discount percentage.\n @param _percentage The new discount percentage."
            },
            "functionSelector": "b3428d15",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDiscountPercentage",
            "nameLocation": "4643:21:181",
            "parameters": {
              "id": 64987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64986,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "4673:11:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64989,
                  "src": "4665:19:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4664:21:181"
            },
            "returnParameters": {
              "id": 64988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4694:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64995,
            "nodeType": "FunctionDefinition",
            "src": "4813:65:181",
            "nodes": [],
            "documentation": {
              "id": 64990,
              "nodeType": "StructuredDocumentation",
              "src": "4699:111:181",
              "text": "@notice Set the unstake deflationary percentage.\n @param _percentage The new deflactionary percentage."
            },
            "functionSelector": "cb8af2b5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDeflationaryPercentage",
            "nameLocation": "4822:25:181",
            "parameters": {
              "id": 64993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64992,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "4856:11:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64995,
                  "src": "4848:19:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4848:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4847:21:181"
            },
            "returnParameters": {
              "id": 64994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4877:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65001,
            "nodeType": "FunctionDefinition",
            "src": "4979:57:181",
            "nodes": [],
            "documentation": {
              "id": 64996,
              "nodeType": "StructuredDocumentation",
              "src": "4882:94:181",
              "text": "@notice Set the round period length time.\n @param _periodLength The new period start."
            },
            "functionSelector": "1c5633d7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPeriodLength",
            "nameLocation": "4988:15:181",
            "parameters": {
              "id": 64999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64998,
                  "mutability": "mutable",
                  "name": "_periodLength",
                  "nameLocation": "5012:13:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65001,
                  "src": "5004:21:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5004:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5003:23:181"
            },
            "returnParameters": {
              "id": 65000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5035:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65007,
            "nodeType": "FunctionDefinition",
            "src": "5146:65:181",
            "nodes": [],
            "documentation": {
              "id": 65002,
              "nodeType": "StructuredDocumentation",
              "src": "5040:103:181",
              "text": "@notice Set the ENS reverse registrar address.\n @param _reverseRegistrar The new period start."
            },
            "functionSelector": "557499ba",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setReverseRegistrar",
            "nameLocation": "5155:19:181",
            "parameters": {
              "id": 65005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65004,
                  "mutability": "mutable",
                  "name": "_reverseRegistrar",
                  "nameLocation": "5183:17:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65007,
                  "src": "5175:25:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5175:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5174:27:181"
            },
            "returnParameters": {
              "id": 65006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5210:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65013,
            "nodeType": "FunctionDefinition",
            "src": "5304:49:181",
            "nodes": [],
            "documentation": {
              "id": 65008,
              "nodeType": "StructuredDocumentation",
              "src": "5215:86:181",
              "text": "@notice Set the ENS resolver address.\n @param _resolver The new period start."
            },
            "functionSelector": "4e543b26",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setResolver",
            "nameLocation": "5313:11:181",
            "parameters": {
              "id": 65011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65010,
                  "mutability": "mutable",
                  "name": "_resolver",
                  "nameLocation": "5333:9:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65013,
                  "src": "5325:17:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5325:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5324:19:181"
            },
            "returnParameters": {
              "id": 65012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5352:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65021,
            "nodeType": "FunctionDefinition",
            "src": "5527:68:181",
            "nodes": [],
            "documentation": {
              "id": 65014,
              "nodeType": "StructuredDocumentation",
              "src": "5357:167:181",
              "text": "@notice Set the uniswap pool address for the given ERC20 token.\n @param _uniswapPool Address of  uniswap pool.\n @param _token Address of  ERC20 contract."
            },
            "functionSelector": "46ccbb40",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapPool",
            "nameLocation": "5536:11:181",
            "parameters": {
              "id": 65019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65016,
                  "mutability": "mutable",
                  "name": "_uniswapPool",
                  "nameLocation": "5556:12:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65021,
                  "src": "5548:20:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5548:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65018,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5578:6:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65021,
                  "src": "5570:14:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5570:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5547:38:181"
            },
            "returnParameters": {
              "id": 65020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5594:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65031,
            "nodeType": "FunctionDefinition",
            "src": "5914:96:181",
            "nodes": [],
            "documentation": {
              "id": 65022,
              "nodeType": "StructuredDocumentation",
              "src": "5599:312:181",
              "text": "@notice Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps.\n @param _from Address to transfer the tokens from.\n @param _to Address to transfer the tokens to.\n @param _amount uint256 amount to transfer."
            },
            "functionSelector": "81910e33",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferRareFrom",
            "nameLocation": "5923:16:181",
            "parameters": {
              "id": 65029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65024,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5953:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65031,
                  "src": "5945:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5945:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65026,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5972:3:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65031,
                  "src": "5964:11:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5964:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65028,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5989:7:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65031,
                  "src": "5981:15:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5981:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5939:61:181"
            },
            "returnParameters": {
              "id": 65030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6009:0:181"
            },
            "scope": 65163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65037,
            "nodeType": "FunctionDefinition",
            "src": "6340:59:181",
            "nodes": [],
            "documentation": {
              "id": 65032,
              "nodeType": "StructuredDocumentation",
              "src": "6223:114:181",
              "text": "@notice Get the address for sending rewards if there are no stakers.\n @return address to send rewards to."
            },
            "functionSelector": "10da95e6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDefaultPayee",
            "nameLocation": "6349:15:181",
            "parameters": {
              "id": 65033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6364:2:181"
            },
            "returnParameters": {
              "id": 65036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65035,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65037,
                  "src": "6390:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6390:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6389:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65045,
            "nodeType": "FunctionDefinition",
            "src": "6530:69:181",
            "nodes": [],
            "documentation": {
              "id": 65038,
              "nodeType": "StructuredDocumentation",
              "src": "6403:124:181",
              "text": "@notice Get the swap pool address for the ERC20 token.\n @return address of the swap pool associated with the token."
            },
            "functionSelector": "039bcf8e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapPool",
            "nameLocation": "6539:11:181",
            "parameters": {
              "id": 65041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65040,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6559:6:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65045,
                  "src": "6551:14:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6551:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6550:16:181"
            },
            "returnParameters": {
              "id": 65044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65045,
                  "src": "6590:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6590:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6589:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65051,
            "nodeType": "FunctionDefinition",
            "src": "6719:58:181",
            "nodes": [],
            "documentation": {
              "id": 65046,
              "nodeType": "StructuredDocumentation",
              "src": "6603:113:181",
              "text": "@notice Retrieve the address of $RARE.\n @return address Address of $RARE (the staking token to be used)."
            },
            "functionSelector": "2210d525",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRareAddress",
            "nameLocation": "6728:14:181",
            "parameters": {
              "id": 65047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6742:2:181"
            },
            "returnParameters": {
              "id": 65050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65051,
                  "src": "6768:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65057,
            "nodeType": "FunctionDefinition",
            "src": "6888:58:181",
            "nodes": [],
            "documentation": {
              "id": 65052,
              "nodeType": "StructuredDocumentation",
              "src": "6781:104:181",
              "text": "@notice Retrieve the address of Wrapped Ethereum.\n @return address Address of Wrapped Ethereum."
            },
            "functionSelector": "23a7b42a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWethAddress",
            "nameLocation": "6897:14:181",
            "parameters": {
              "id": 65053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6911:2:181"
            },
            "returnParameters": {
              "id": 65056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65055,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65057,
                  "src": "6937:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6937:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6936:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65063,
            "nodeType": "FunctionDefinition",
            "src": "7045:65:181",
            "nodes": [],
            "documentation": {
              "id": 65058,
              "nodeType": "StructuredDocumentation",
              "src": "6950:92:181",
              "text": "@notice Get reward swap discount percentage.\n @return uint256  discount percentage."
            },
            "functionSelector": "111029b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDiscountPercentage",
            "nameLocation": "7054:21:181",
            "parameters": {
              "id": 65059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7075:2:181"
            },
            "returnParameters": {
              "id": 65062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65061,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65063,
                  "src": "7101:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7101:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7100:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65069,
            "nodeType": "FunctionDefinition",
            "src": "7216:69:181",
            "nodes": [],
            "documentation": {
              "id": 65064,
              "nodeType": "StructuredDocumentation",
              "src": "7114:99:181",
              "text": "@notice Get the unstake deflationary percentage.\n @return uint256 deflationary percentage."
            },
            "functionSelector": "f7ef8ead",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDeflationaryPercentage",
            "nameLocation": "7225:25:181",
            "parameters": {
              "id": 65065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7250:2:181"
            },
            "returnParameters": {
              "id": 65068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65069,
                  "src": "7276:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7276:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7275:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65075,
            "nodeType": "FunctionDefinition",
            "src": "7369:59:181",
            "nodes": [],
            "documentation": {
              "id": 65070,
              "nodeType": "StructuredDocumentation",
              "src": "7289:77:181",
              "text": "@notice Get the round period length.\n @return uint256 period length."
            },
            "functionSelector": "8469ddc7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPeriodLength",
            "nameLocation": "7378:15:181",
            "parameters": {
              "id": 65071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7393:2:181"
            },
            "returnParameters": {
              "id": 65074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65075,
                  "src": "7419:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7419:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7418:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65084,
            "nodeType": "FunctionDefinition",
            "src": "7641:82:181",
            "nodes": [],
            "documentation": {
              "id": 65076,
              "nodeType": "StructuredDocumentation",
              "src": "7432:206:181",
              "text": "@notice Retrieves the staking info for a given user.\n @param _user Address of user being queried.\n @return Info struct containing name, symbol, staking address, and reward accumulator address."
            },
            "functionSelector": "f24bd8a6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingInfoForUser",
            "nameLocation": "7650:21:181",
            "parameters": {
              "id": 65079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65078,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "7680:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65084,
                  "src": "7672:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7672:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7671:15:181"
            },
            "returnParameters": {
              "id": 65083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65082,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65084,
                  "src": "7710:11:181",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$64886_memory_ptr",
                    "typeString": "struct IRareStakingRegistry.Info"
                  },
                  "typeName": {
                    "id": 65081,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65080,
                      "name": "Info",
                      "nameLocations": ["7710:4:181"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64886,
                      "src": "7710:4:181"
                    },
                    "referencedDeclaration": 64886,
                    "src": "7710:4:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$64886_storage_ptr",
                      "typeString": "struct IRareStakingRegistry.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7709:13:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65092,
            "nodeType": "FunctionDefinition",
            "src": "7878:81:181",
            "nodes": [],
            "documentation": {
              "id": 65085,
              "nodeType": "StructuredDocumentation",
              "src": "7727:148:181",
              "text": "@notice Retrieves the staking address for a given user.\n @param _user Address of user being queried.\n @return address staking address."
            },
            "functionSelector": "81d0606b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingAddressForUser",
            "nameLocation": "7887:24:181",
            "parameters": {
              "id": 65088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65087,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "7920:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65092,
                  "src": "7912:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7912:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7911:15:181"
            },
            "returnParameters": {
              "id": 65091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65092,
                  "src": "7950:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7950:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7949:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65100,
            "nodeType": "FunctionDefinition",
            "src": "8136:91:181",
            "nodes": [],
            "documentation": {
              "id": 65093,
              "nodeType": "StructuredDocumentation",
              "src": "7963:170:181",
              "text": "@notice Retrieves the reward accumulator address for a given user.\n @param _user Address of user being queried.\n @return address Reward accumulator address."
            },
            "functionSelector": "e286ef33",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardAccumulatorAddressForUser",
            "nameLocation": "8145:34:181",
            "parameters": {
              "id": 65096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65095,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8188:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65100,
                  "src": "8180:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8180:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8179:15:181"
            },
            "returnParameters": {
              "id": 65099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65098,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65100,
                  "src": "8218:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8218:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8217:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65108,
            "nodeType": "FunctionDefinition",
            "src": "8410:83:181",
            "nodes": [],
            "documentation": {
              "id": 65101,
              "nodeType": "StructuredDocumentation",
              "src": "8231:176:181",
              "text": "@notice Retrieves the total amount of rare staked by a given user.\n @param _user Address of the user staking.\n @return uint256 Amount of rare the user is staking."
            },
            "functionSelector": "06c571d5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmountStakedByUser",
            "nameLocation": "8419:26:181",
            "parameters": {
              "id": 65104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65103,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8454:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65108,
                  "src": "8446:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8446:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8445:15:181"
            },
            "returnParameters": {
              "id": 65107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65108,
                  "src": "8484:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8484:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8483:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65116,
            "nodeType": "FunctionDefinition",
            "src": "8695:83:181",
            "nodes": [],
            "documentation": {
              "id": 65109,
              "nodeType": "StructuredDocumentation",
              "src": "8497:195:181",
              "text": "@notice Retrieves the total amount of rare being staked on a given user.\n @param _user Address of the user being staked on.\n @return uint256 Amount of rare being staked on the user."
            },
            "functionSelector": "3d867d95",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmountStakedOnUser",
            "nameLocation": "8704:26:181",
            "parameters": {
              "id": 65112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65111,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8739:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65116,
                  "src": "8731:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 65110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8731:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8730:15:181"
            },
            "returnParameters": {
              "id": 65115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65116,
                  "src": "8769:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8769:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8768:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65126,
            "nodeType": "FunctionDefinition",
            "src": "8924:112:181",
            "nodes": [],
            "documentation": {
              "id": 65117,
              "nodeType": "StructuredDocumentation",
              "src": "8782:139:181",
              "text": "@notice Query the users for the following staking addresseses.\n @param _stakingAddrs Addresses of staking contracts being queried."
            },
            "functionSelector": "18ab58ac",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUsersForStakingAddresses",
            "nameLocation": "8933:27:181",
            "parameters": {
              "id": 65121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65120,
                  "mutability": "mutable",
                  "name": "_stakingAddrs",
                  "nameLocation": "8980:13:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 65126,
                  "src": "8961:32:181",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 65118,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8961:7:181",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 65119,
                    "nodeType": "ArrayTypeName",
                    "src": "8961:9:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8960:34:181"
            },
            "returnParameters": {
              "id": 65125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65126,
                  "src": "9018:16:181",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 65122,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9018:7:181",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 65123,
                    "nodeType": "ArrayTypeName",
                    "src": "9018:9:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9017:18:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65132,
            "nodeType": "FunctionDefinition",
            "src": "9198:68:181",
            "nodes": [],
            "documentation": {
              "id": 65127,
              "nodeType": "StructuredDocumentation",
              "src": "9040:155:181",
              "text": "@notice Bytes32 representation of the role used for setting the staking address of a user.\n @return bytes32 value of the staking info setter role."
            },
            "functionSelector": "265718b4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_INFO_SETTER_ROLE",
            "nameLocation": "9207:24:181",
            "parameters": {
              "id": 65128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9231:2:181"
            },
            "returnParameters": {
              "id": 65131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65132,
                  "src": "9257:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65129,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9257:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9256:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65138,
            "nodeType": "FunctionDefinition",
            "src": "9487:74:181",
            "nodes": [],
            "documentation": {
              "id": 65133,
              "nodeType": "StructuredDocumentation",
              "src": "9270:214:181",
              "text": "@notice Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user.\n @return bytes32 value of the staking stat setter admin role."
            },
            "functionSelector": "29b4a590",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
            "nameLocation": "9496:30:181",
            "parameters": {
              "id": 65134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9526:2:181"
            },
            "returnParameters": {
              "id": 65137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65138,
                  "src": "9552:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65135,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9552:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9551:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65144,
            "nodeType": "FunctionDefinition",
            "src": "9754:68:181",
            "nodes": [],
            "documentation": {
              "id": 65139,
              "nodeType": "StructuredDocumentation",
              "src": "9565:186:181",
              "text": "@notice Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally.\n @return bytes32 value of the stat setter role."
            },
            "functionSelector": "66951bc1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_STAT_SETTER_ROLE",
            "nameLocation": "9763:24:181",
            "parameters": {
              "id": 65140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9787:2:181"
            },
            "returnParameters": {
              "id": 65143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65144,
                  "src": "9813:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65141,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9813:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9812:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65150,
            "nodeType": "FunctionDefinition",
            "src": "10011:70:181",
            "nodes": [],
            "documentation": {
              "id": 65145,
              "nodeType": "StructuredDocumentation",
              "src": "9826:182:181",
              "text": "@notice Bytes32 representation of the role used for period length, deflationary percentages, and the default payee.\n @return bytes32 value of the staking config setter role."
            },
            "functionSelector": "a4303a45",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_CONFIG_SETTER_ROLE",
            "nameLocation": "10020:26:181",
            "parameters": {
              "id": 65146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10046:2:181"
            },
            "returnParameters": {
              "id": 65149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65150,
                  "src": "10072:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65147,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10072:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10071:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65156,
            "nodeType": "FunctionDefinition",
            "src": "10223:59:181",
            "nodes": [],
            "documentation": {
              "id": 65151,
              "nodeType": "StructuredDocumentation",
              "src": "10085:135:181",
              "text": "@notice Bytes32 representation of the role used for updating the ENS resolvers.\n @return bytes32 value of the ens setter role."
            },
            "functionSelector": "c2544987",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ENS_SETTER_ROLE",
            "nameLocation": "10232:15:181",
            "parameters": {
              "id": 65152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10247:2:181"
            },
            "returnParameters": {
              "id": 65155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65156,
                  "src": "10273:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10273:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10272:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 65162,
            "nodeType": "FunctionDefinition",
            "src": "10426:65:181",
            "nodes": [],
            "documentation": {
              "id": 65157,
              "nodeType": "StructuredDocumentation",
              "src": "10286:137:181",
              "text": "@notice Bytes32 representation of the role used for updating uniswap pools.\n @return bytes32 value of the swap pool setter role."
            },
            "functionSelector": "363227e5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "SWAP_POOL_SETTER_ROLE",
            "nameLocation": "10435:21:181",
            "parameters": {
              "id": 65158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10456:2:181"
            },
            "returnParameters": {
              "id": 65161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65160,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65162,
                  "src": "10482:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 65159,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10482:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10481:9:181"
            },
            "scope": 65163,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRareStakingRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 64877,
          "nodeType": "StructuredDocumentation",
          "src": "57:146:181",
          "text": "@author koloz, charlescrain\n @title IRareStakingRegistry\n @notice The Staking Registry interface containing all functions, events, etc."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [65163],
        "name": "IRareStakingRegistry",
        "nameLocation": "213:20:181",
        "scope": 65164,
        "usedErrors": [64926, 64929, 64932, 64935, 64938, 64941, 64944, 64947]
      }
    ],
    "license": "MIT"
  },
  "id": 181
}
